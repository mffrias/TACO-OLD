//-------------- SourcesZemin_SinglyLinkedList --------------//
module SourcesZemin_SinglyLinkedList
sig SourcesZemin_SinglyLinkedList extends java_lang_Object {}
{}
field SourcesZemin_SinglyLinkedList_header:(SourcesZemin_SinglyLinkedList)->one(null+roops_core_objects_SinglyLinkedListNode) {}

object_invariant
   all n:null+roops_core_objects_SinglyLinkedListNode | {
     liftExpression[fun_set_contains[fun_reach[thiz.SourcesZemin_SinglyLinkedList_header,roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next],n]]
     implies 
             equ[fun_set_contains[fun_reach[n.roops_core_objects_SinglyLinkedListNode_next,roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next],n],
                false]
   
   }



program SourcesZemin_SinglyLinkedList::showInstance[
  var thiz:SourcesZemin_SinglyLinkedList,
  var throw:java_lang_Throwable+null,
  var return:boolean] 
Specification 
{
  SpecCase #0 {
   requires {
      equ[fun_java_primitive_integer_value_size_of[fun_reach[thiz.SourcesZemin_SinglyLinkedList_header,roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next]],
         JavaPrimitiveIntegerLiteral100]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[return',
                 false]
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         if (
           throw=null)
         and 
         (
           exit_stmt_reached=false)   {
               return:=true;
               exit_stmt_reached:=true;
            
            }
          else {
            skip;
         };
      
      }
      skip;
   
   }


program SourcesZemin_SinglyLinkedList::insertBack[
  var thiz:SourcesZemin_SinglyLinkedList,
  var throw:java_lang_Throwable+null,
  var data:java_lang_Object+null,
  var freshNode:null+roops_core_objects_SinglyLinkedListNode] 
Specification 
{
  SpecCase #0 {
   requires {
      neq[freshNode,
         null]
   }
   
   requires {
      equ[fun_set_contains[fun_reach[thiz.SourcesZemin_SinglyLinkedList_header,roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next],freshNode],
         false]
   }
   
   ensures {
      instanceOf[throw',
                java_lang_Exception]
      implies 
              liftExpression[false]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                some n:null+roops_core_objects_SinglyLinkedListNode | {
                  liftExpression[fun_set_contains[fun_reach[thiz'.SourcesZemin_SinglyLinkedList_header',roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next'],n]]
                  and 
                  equ[n.roops_core_objects_SinglyLinkedListNode_next',
                     null]
                  and 
                  equ[n.roops_core_objects_SinglyLinkedListNode_value',
                     data']
                
                }
              )
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                all n:null+roops_core_objects_SinglyLinkedListNode | {
                  liftExpression[fun_set_contains[fun_reach[thiz.SourcesZemin_SinglyLinkedList_header,roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next],n]]
                  implies 
                          equ[fun_set_contains[fun_reach[thiz'.SourcesZemin_SinglyLinkedList_header',roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next'],n],
                             true]
                
                }
              )
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[fun_java_primitive_integer_value_size_of[fun_reach[thiz'.SourcesZemin_SinglyLinkedList_header',roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next']],
                 SK_jml_pred_java_primitive_integer_value_add_ARG_result_0]
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_21:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[freshNode]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  freshNode.roops_core_objects_SinglyLinkedListNode_value:=data;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[freshNode]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  freshNode.roops_core_objects_SinglyLinkedListNode_next:=((null+roops_core_objects_SinglyLinkedListNode) & (null));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_21:=(equ[thiz.SourcesZemin_SinglyLinkedList_header,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_21=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[thiz]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        thiz.SourcesZemin_SinglyLinkedList_header:=freshNode;
                     };
                  } else {
                     skip;
                  };
               } else    {
                     var var_9_current:null+roops_core_objects_SinglyLinkedListNode;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[thiz]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           var_9_current:=thiz.SourcesZemin_SinglyLinkedList_header;
                        };
                     } else {
                        skip;
                     };
                     var var_10_ws_3:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_10_ws_3:=(neq[var_9_current.roops_core_objects_SinglyLinkedListNode_next,
                           null]=>(true)else(false));
                     } else {
                        skip;
                     };
                     while liftExpression[var_10_ws_3]
                     and 
                     (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false)
                     
                        {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[var_9_current]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 var_9_current:=var_9_current.roops_core_objects_SinglyLinkedListNode_next;
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_10_ws_3:=(neq[var_9_current.roops_core_objects_SinglyLinkedListNode_next,
                                 null]=>(true)else(false));
                           } else {
                              skip;
                           };
                        
                        }
                     ;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[var_9_current]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           var_9_current.roops_core_objects_SinglyLinkedListNode_next:=freshNode;
                        };
                     } else {
                        skip;
                     };
                  
                  }
               ;
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesZemin_SinglyLinkedList::contains[
  var thiz:SourcesZemin_SinglyLinkedList,
  var throw:java_lang_Throwable+null,
  var return:boolean,
  var value_param:java_lang_Object+null] 
Specification 
{
  SpecCase #0 {
   ensures {
      instanceOf[throw',
                java_lang_Exception]
      implies 
              liftExpression[false]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                (
                  (
                    some n:null+roops_core_objects_SinglyLinkedListNode | {
                      liftExpression[fun_set_contains[fun_reach[thiz'.SourcesZemin_SinglyLinkedList_header',roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next'],n]]
                      and 
                      equ[n.roops_core_objects_SinglyLinkedListNode_value',
                         value_param']
                    
                    }
                  )
                  implies 
                          equ[return',
                             true]
                )
                and 
                (
                  equ[return',
                     true]
                  implies 
                          (
                            some n:null+roops_core_objects_SinglyLinkedListNode | {
                              liftExpression[fun_set_contains[fun_reach[thiz'.SourcesZemin_SinglyLinkedList_header',roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next'],n]]
                              and 
                              equ[n.roops_core_objects_SinglyLinkedListNode_value',
                                 value_param']
                            
                            }
                          )
                )
              )
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_1:boolean;
            var t_2:boolean;
            var t_3:boolean;
            var var_1_current:null+roops_core_objects_SinglyLinkedListNode;
            var var_2_result:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_1_current:=thiz.SourcesZemin_SinglyLinkedList_header;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_2_result:=false;
            } else {
               skip;
            };
            var var_3_ws_1:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_2:=(equ[var_2_result,
                  false]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_3:=(neq[var_1_current,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_2=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_3=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_1:=true;
                        } else {
                           skip;
                        };
                     } else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_1:=false;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
               } else {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_1:=false;
                  } else {
                     skip;
                  };
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_3_ws_1:=t_1;
            } else {
               skip;
            };
            while liftExpression[var_3_ws_1]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_7:boolean;
                  var t_8:boolean;
                  var t_9:boolean;
                  var t_10:boolean;
                  var t_11:boolean;
                  var t_12:boolean;
                  var t_13:boolean;
                  var var_4_equalVal:boolean;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_8:=(equ[value_param,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_9:=(equ[var_1_current.roops_core_objects_SinglyLinkedListNode_value,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_8=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           if t_9=true{
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 t_7:=true;
                              } else {
                                 skip;
                              };
                           } else {
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 t_7:=false;
                              } else {
                                 skip;
                              };
                           };
                        } else {
                           skip;
                        };
                     } else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_7:=false;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_7=true   {
                           var t_4:boolean;
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[thiz]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 call showInstance[thiz,throw,t_4];
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_4_equalVal:=t_4;
                           } else {
                              skip;
                           };
                        
                        }
                      else    {
                           var t_6:boolean;
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_6:=(neq[value_param,
                                 null]=>(true)else(false));
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_6=true   {
                                    var t_5:boolean;
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       t_5:=(equ[value_param,
                                          var_1_current.roops_core_objects_SinglyLinkedListNode_value]=>(true)else(false));
                                    } else {
                                       skip;
                                    };
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       if t_5=true{
                                          if (
                                            throw=null)
                                          and 
                                          (
                                            exit_stmt_reached=false){
                                             var_4_equalVal:=true;
                                          } else {
                                             skip;
                                          };
                                       } else {
                                          if (
                                            throw=null)
                                          and 
                                          (
                                            exit_stmt_reached=false){
                                             var_4_equalVal:=false;
                                          } else {
                                             skip;
                                          };
                                       };
                                    } else {
                                       skip;
                                    };
                                 
                                 }
                               else {
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    var_4_equalVal:=false;
                                 } else {
                                    skip;
                                 };
                              };
                           } else {
                              skip;
                           };
                        
                        }
                     ;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_10:=(equ[var_4_equalVal,
                        true]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_10=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           var_2_result:=true;
                        } else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[thiz.SourcesZemin_SinglyLinkedList_header]
                     or 
                     isEmptyOrNull[thiz]
                     {
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        var_1_current:=(thiz.SourcesZemin_SinglyLinkedList_header).roops_core_objects_SinglyLinkedListNode_next;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_12:=(equ[var_2_result,
                        false]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_13:=(neq[var_1_current,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_12=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           if t_13=true{
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 t_11:=true;
                              } else {
                                 skip;
                              };
                           } else {
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 t_11:=false;
                              } else {
                                 skip;
                              };
                           };
                        } else {
                           skip;
                        };
                     } else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_11:=false;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_3_ws_1:=t_11;
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_2_result;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesZemin_SinglyLinkedList::getNode[
  var thiz:SourcesZemin_SinglyLinkedList,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objects_SinglyLinkedListNode,
  var index:JavaPrimitiveIntegerValue] 
Specification 
{
  SpecCase #0 {
   requires {
      pred_java_primitive_integer_value_gte[index,
                                           JavaPrimitiveIntegerLiteral0]
      and 
      pred_java_primitive_integer_value_lt[index,
                                          fun_java_primitive_integer_value_size_of[fun_reach[thiz.SourcesZemin_SinglyLinkedList_header,roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next]]]
   }
   
   ensures {
      instanceOf[throw',
                java_lang_Exception]
      implies 
              liftExpression[false]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[fun_java_primitive_integer_value_size_of[fun_reach[return',roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next']],
                 SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[fun_set_contains[fun_reach[thiz'.SourcesZemin_SinglyLinkedList_header',roops_core_objects_SinglyLinkedListNode,roops_core_objects_SinglyLinkedListNode_next'],return'],
                 true]
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_14:boolean;
            var t_15:boolean;
            var t_16:boolean;
            var var_5_current:null+roops_core_objects_SinglyLinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_5_current:=thiz.SourcesZemin_SinglyLinkedList_header;
               };
            } else {
               skip;
            };
            var var_6_result:null+roops_core_objects_SinglyLinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_6_result:=((null+roops_core_objects_SinglyLinkedListNode) & (null));
            } else {
               skip;
            };
            var var_7_current_index:JavaPrimitiveIntegerValue;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_7_current_index:=JavaPrimitiveIntegerLiteral0;
            } else {
               skip;
            };
            var var_8_ws_2:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_15:=(equ[var_6_result,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_16:=(neq[var_5_current,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_15=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_16=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_14:=true;
                        } else {
                           skip;
                        };
                     } else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_14:=false;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
               } else {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_14:=false;
                  } else {
                     skip;
                  };
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_8_ws_2:=t_14;
            } else {
               skip;
            };
            while liftExpression[var_8_ws_2]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_17:boolean;
                  var t_18:boolean;
                  var t_19:boolean;
                  var t_20:boolean;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_17:=(equ[index,
                        var_7_current_index]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_17=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           var_6_result:=var_5_current;
                        } else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_7_current_index:=fun_java_primitive_integer_value_add[var_7_current_index,JavaPrimitiveIntegerLiteral1];
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_5_current]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        var_5_current:=var_5_current.roops_core_objects_SinglyLinkedListNode_next;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_19:=(equ[var_6_result,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_20:=(neq[var_5_current,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_19=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           if t_20=true{
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 t_18:=true;
                              } else {
                                 skip;
                              };
                           } else {
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 t_18:=false;
                              } else {
                                 skip;
                              };
                           };
                        } else {
                           skip;
                        };
                     } else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_18:=false;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_8_ws_2:=t_18;
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_6_result;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesZemin_SinglyLinkedList::Constructor[
  var thiz:SourcesZemin_SinglyLinkedList,
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         if (
           throw=null)
         and 
         (
           exit_stmt_reached=false){
            if isEmptyOrNull[thiz]{
               throw:=java_lang_NullPointerExceptionLit;
            } else {
               thiz.SourcesZemin_SinglyLinkedList_header:=((null+roops_core_objects_SinglyLinkedListNode) & (null));
            };
         } else {
            skip;
         };
      
      }
      skip;
   
   }



