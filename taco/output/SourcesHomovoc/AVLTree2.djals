//-------------- SourcesHomovoc_AVLTree2 --------------//
module SourcesHomovoc_AVLTree2
sig SourcesHomovoc_AVLTree2 extends java_lang_Object {}
{}
field SourcesHomovoc_AVLTree2_root:(SourcesHomovoc_AVLTree2)->one(SourcesHomovoc_AVLNode2+null) {}

object_invariant
   all n:SourcesHomovoc_AVLNode2+null | {
     some SK_jml_pred_java_primitive_integer_value_add_ARG_result_0:JavaPrimitiveIntegerValue,
     SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_0:boolean,
     SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0:JavaPrimitiveIntegerValue,
     SK_jml_pred_java_primitive_integer_value_sub_ARG_overflow_0:boolean,
     SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1:JavaPrimitiveIntegerValue,
     SK_jml_pred_java_primitive_integer_value_sub_ARG_overflow_1:boolean | {
       pred_java_primitive_integer_value_add[(pred_java_primitive_integer_value_gt[(n.SourcesHomovoc_AVLNode2_left).SourcesHomovoc_AVLNode2_height,
                                           (n.SourcesHomovoc_AVLNode2_right).SourcesHomovoc_AVLNode2_height]=>((n.SourcesHomovoc_AVLNode2_left).SourcesHomovoc_AVLNode2_height)else((n.SourcesHomovoc_AVLNode2_right).SourcesHomovoc_AVLNode2_height)),
                                            JavaPrimitiveIntegerLiteral1,
                                            SK_jml_pred_java_primitive_integer_value_add_ARG_result_0,
                                            SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_0]
       and 
       (
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteralMinus3)
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteralMinus2)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteralMinus1)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral0)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral1)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral2)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral3)
       )
       and 
       pred_java_primitive_integer_value_sub[(n.SourcesHomovoc_AVLNode2_left).SourcesHomovoc_AVLNode2_height,
                                            (n.SourcesHomovoc_AVLNode2_right).SourcesHomovoc_AVLNode2_height,
                                            SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0,
                                            SK_jml_pred_java_primitive_integer_value_sub_ARG_overflow_0]
       and 
       (
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0=JavaPrimitiveIntegerLiteralMinus3)
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0=JavaPrimitiveIntegerLiteralMinus2)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0=JavaPrimitiveIntegerLiteralMinus1)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0=JavaPrimitiveIntegerLiteral0)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0=JavaPrimitiveIntegerLiteral1)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0=JavaPrimitiveIntegerLiteral2)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0=JavaPrimitiveIntegerLiteral3)
       )
       and 
       pred_java_primitive_integer_value_sub[(n.SourcesHomovoc_AVLNode2_right).SourcesHomovoc_AVLNode2_height,
                                            (n.SourcesHomovoc_AVLNode2_left).SourcesHomovoc_AVLNode2_height,
                                            SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1,
                                            SK_jml_pred_java_primitive_integer_value_sub_ARG_overflow_1]
       and 
       (
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1=JavaPrimitiveIntegerLiteralMinus3)
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1=JavaPrimitiveIntegerLiteralMinus2)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1=JavaPrimitiveIntegerLiteralMinus1)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1=JavaPrimitiveIntegerLiteral0)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1=JavaPrimitiveIntegerLiteral1)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1=JavaPrimitiveIntegerLiteral2)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1=JavaPrimitiveIntegerLiteral3)
       )
       and 
       (
         equ[fun_set_contains[fun_reach[thiz.SourcesHomovoc_AVLTree2_root,SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right+SourcesHomovoc_AVLNode2_left],n],
            true]
         implies 
                 (
                   equ[fun_set_contains[fun_reach[n.SourcesHomovoc_AVLNode2_left,SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_left+SourcesHomovoc_AVLNode2_right],n],
                      false]
                   and 
                   equ[fun_set_contains[fun_reach[n.SourcesHomovoc_AVLNode2_right,SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_left+SourcesHomovoc_AVLNode2_right],n],
                      false]
                   and 
                   (
                     all m:SourcesHomovoc_AVLNode2+null | {
                       liftExpression[fun_set_contains[fun_reach[n.SourcesHomovoc_AVLNode2_left,SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right+SourcesHomovoc_AVLNode2_left],m]]
                       implies 
                               pred_java_primitive_integer_value_lt[m.SourcesHomovoc_AVLNode2_value,
                                                                   n.SourcesHomovoc_AVLNode2_value]
                     
                     }
                   )
                   and 
                   (
                     all m:SourcesHomovoc_AVLNode2+null | {
                       liftExpression[fun_set_contains[fun_reach[n.SourcesHomovoc_AVLNode2_right,SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right+SourcesHomovoc_AVLNode2_left],m]]
                       implies 
                               pred_java_primitive_integer_value_lt[n.SourcesHomovoc_AVLNode2_value,
                                                                   m.SourcesHomovoc_AVLNode2_value]
                     
                     }
                   )
                   and 
                   (
                     (
                       equ[n.SourcesHomovoc_AVLNode2_left,
                          null]
                       and 
                       equ[n.SourcesHomovoc_AVLNode2_right,
                          null]
                     )
                     implies 
                             equ[n.SourcesHomovoc_AVLNode2_height,
                                JavaPrimitiveIntegerLiteral0]
                   )
                   and 
                   (
                     (
                       equ[n.SourcesHomovoc_AVLNode2_left,
                          null]
                       and 
                       equ[n.SourcesHomovoc_AVLNode2_right,
                          null]
                     )
                     implies 
                             equ[n.SourcesHomovoc_AVLNode2_height,
                                JavaPrimitiveIntegerLiteral0]
                   )
                   and 
                   (
                     (
                       equ[n.SourcesHomovoc_AVLNode2_left,
                          null]
                       and 
                       neq[n.SourcesHomovoc_AVLNode2_right,
                          null]
                     )
                     implies 
                             (
                               equ[n.SourcesHomovoc_AVLNode2_height,
                                  JavaPrimitiveIntegerLiteral1]
                               and 
                               equ[(n.SourcesHomovoc_AVLNode2_right).SourcesHomovoc_AVLNode2_height,
                                  JavaPrimitiveIntegerLiteral0]
                             )
                   )
                   and 
                   (
                     (
                       neq[n.SourcesHomovoc_AVLNode2_left,
                          null]
                       and 
                       equ[n.SourcesHomovoc_AVLNode2_right,
                          null]
                     )
                     implies 
                             (
                               equ[n.SourcesHomovoc_AVLNode2_height,
                                  JavaPrimitiveIntegerLiteral1]
                               and 
                               equ[(n.SourcesHomovoc_AVLNode2_left).SourcesHomovoc_AVLNode2_height,
                                  JavaPrimitiveIntegerLiteral0]
                             )
                   )
                   and 
                   (
                     (
                       neq[n.SourcesHomovoc_AVLNode2_left,
                          null]
                       and 
                       neq[n.SourcesHomovoc_AVLNode2_right,
                          null]
                     )
                     implies 
                             (
                               equ[n.SourcesHomovoc_AVLNode2_height,
                                  SK_jml_pred_java_primitive_integer_value_add_ARG_result_0]
                               and 
                               pred_java_primitive_integer_value_lte[(pred_java_primitive_integer_value_gt[(n.SourcesHomovoc_AVLNode2_left).SourcesHomovoc_AVLNode2_height,
                                                                   (n.SourcesHomovoc_AVLNode2_right).SourcesHomovoc_AVLNode2_height]=>(SK_jml_pred_java_primitive_integer_value_sub_ARG_result_0)else(SK_jml_pred_java_primitive_integer_value_sub_ARG_result_1)),
                                                                    JavaPrimitiveIntegerLiteral1]
                             )
                   )
                   and 
                   (
                     neq[n.SourcesHomovoc_AVLNode2_right,
                        null]
                     implies 
                             equ[(n.SourcesHomovoc_AVLNode2_right).SourcesHomovoc_AVLNode2_parent,
                                n]
                   )
                   and 
                   (
                     neq[n.SourcesHomovoc_AVLNode2_left,
                        null]
                     implies 
                             equ[(n.SourcesHomovoc_AVLNode2_left).SourcesHomovoc_AVLNode2_parent,
                                n]
                   )
                   and 
                   (
                     equ[n,
                        thiz.SourcesHomovoc_AVLTree2_root]
                     implies 
                             equ[n.SourcesHomovoc_AVLNode2_parent,
                                null]
                   )
                 )
       )
     
     }
   
   }



program SourcesHomovoc_AVLTree2::detectKeyNode[
  var thiz:SourcesHomovoc_AVLTree2,
  var throw:java_lang_Throwable+null,
  var return:SourcesHomovoc_AVLNode2+null,
  var parentOfDeletedLeaf:SourcesHomovoc_AVLNode2+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var var_6_currentNode:SourcesHomovoc_AVLNode2+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_6_currentNode:=parentOfDeletedLeaf;
            } else {
               skip;
            };
            var var_7_ws_1:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_7_ws_1:=(neq[var_6_currentNode,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_7_ws_1]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_12:JavaPrimitiveIntegerValue;
                  var t_13:boolean;
                  var t_14:boolean;
                  var t_15:boolean;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_6_currentNode]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call getBalanceFactor[var_6_currentNode,throw,t_12];
                     };
                  } else {
                     skip;
                  };
                  var var_8_bf:JavaPrimitiveIntegerValue;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_8_bf:=t_12;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_14:=(equ[var_8_bf,
                        JavaPrimitiveIntegerLiteral2]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_14=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_13:=true;
                        } else {
                           skip;
                        };
                     } else    {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_15:=(equ[var_8_bf,
                                 JavaPrimitiveIntegerLiteralMinus2]=>(true)else(false));
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_15=true{
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    t_13:=true;
                                 } else {
                                    skip;
                                 };
                              } else {
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    t_13:=false;
                                 } else {
                                    skip;
                                 };
                              };
                           } else {
                              skip;
                           };
                        
                        }
                     ;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_13=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false)   {
                              return:=var_6_currentNode;
                              exit_stmt_reached:=true;
                           
                           }
                         else {
                           skip;
                        };
                     } else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           if isEmptyOrNull[var_6_currentNode]{
                              throw:=java_lang_NullPointerExceptionLit;
                           } else {
                              var_6_currentNode:=var_6_currentNode.SourcesHomovoc_AVLNode2_parent;
                           };
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_7_ws_1:=(neq[var_6_currentNode,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=((SourcesHomovoc_AVLNode2+null) & (null));
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesHomovoc_AVLTree2::Constructor[
  var thiz:SourcesHomovoc_AVLTree2,
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         if (
           throw=null)
         and 
         (
           exit_stmt_reached=false){
            if isEmptyOrNull[thiz]{
               throw:=java_lang_NullPointerExceptionLit;
            } else {
               thiz.SourcesHomovoc_AVLTree2_root:=((SourcesHomovoc_AVLNode2+null) & (null));
            };
         } else {
            skip;
         };
      
      }
      skip;
   
   }


program SourcesHomovoc_AVLTree2::updateHeightsAndDetectKeyNode[
  var thiz:SourcesHomovoc_AVLTree2,
  var throw:java_lang_Throwable+null,
  var return:SourcesHomovoc_AVLNode2+null,
  var newNode:SourcesHomovoc_AVLNode2+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_34:boolean;
            var t_35:boolean;
            var t_36:boolean;
            var var_17_keyNode:SourcesHomovoc_AVLNode2+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_17_keyNode:=((SourcesHomovoc_AVLNode2+null) & (null));
            } else {
               skip;
            };
            var var_18_found:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_18_found:=false;
            } else {
               skip;
            };
            var var_19_ws_5:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_35:=(neq[newNode.SourcesHomovoc_AVLNode2_parent,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_35=true   {
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_36:=Not[var_18_found];
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_36=true{
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_34:=true;
                           } else {
                              skip;
                           };
                        } else {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_34:=false;
                           } else {
                              skip;
                           };
                        };
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_34:=false;
                  } else {
                     skip;
                  };
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_19_ws_5:=t_34;
            } else {
               skip;
            };
            while liftExpression[var_19_ws_5]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_47:SourcesHomovoc_AVLNode2+null;
                  var t_48:JavaPrimitiveIntegerValue;
                  var t_49:boolean;
                  var t_50:boolean;
                  var t_51:boolean;
                  var t_52:boolean;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[newNode]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call getParent[newNode,throw,t_47];
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[t_47]
                     or 
                     isEmptyOrNull[newNode]
                     {
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        t_48:=fun_java_primitive_integer_value_sub[t_47.SourcesHomovoc_AVLNode2_height,newNode.SourcesHomovoc_AVLNode2_height];
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_49:=(neq[t_48,
                        JavaPrimitiveIntegerLiteral1]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_49=true   {
                           var t_43:boolean;
                           var t_44:SourcesHomovoc_AVLNode2+null;
                           var t_45:JavaPrimitiveIntegerValue;
                           var t_46:SourcesHomovoc_AVLNode2+null;
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_43:=(equ[var_17_keyNode,
                                 null]=>(true)else(false));
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_43=true   {
                                    var t_37:SourcesHomovoc_AVLNode2+null;
                                    var t_38:JavaPrimitiveIntegerValue;
                                    var t_40:boolean;
                                    var t_41:boolean;
                                    var t_42:boolean;
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       if isEmptyOrNull[newNode]{
                                          throw:=java_lang_NullPointerExceptionLit;
                                       } else {
                                          call getParent[newNode,throw,t_37];
                                       };
                                    } else {
                                       skip;
                                    };
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       if isEmptyOrNull[t_37]{
                                          throw:=java_lang_NullPointerExceptionLit;
                                       } else {
                                          call getBalanceFactor[t_37,throw,t_38];
                                       };
                                    } else {
                                       skip;
                                    };
                                    var var_20_bf_parent:JavaPrimitiveIntegerValue;
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       var_20_bf_parent:=t_38;
                                    } else {
                                       skip;
                                    };
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       t_41:=(pred_java_primitive_integer_value_gt[var_20_bf_parent,
                                                                           JavaPrimitiveIntegerLiteral1]=>(true)else(false));
                                    } else {
                                       skip;
                                    };
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       if t_41=true{
                                          if (
                                            throw=null)
                                          and 
                                          (
                                            exit_stmt_reached=false){
                                             t_40:=true;
                                          } else {
                                             skip;
                                          };
                                       } else    {
                                             if (
                                               throw=null)
                                             and 
                                             (
                                               exit_stmt_reached=false){
                                                t_42:=(pred_java_primitive_integer_value_lt[var_20_bf_parent,
                                                                                    JavaPrimitiveIntegerLiteralMinus1]=>(true)else(false));
                                             } else {
                                                skip;
                                             };
                                             if (
                                               throw=null)
                                             and 
                                             (
                                               exit_stmt_reached=false){
                                                if t_42=true{
                                                   if (
                                                     throw=null)
                                                   and 
                                                   (
                                                     exit_stmt_reached=false){
                                                      t_40:=true;
                                                   } else {
                                                      skip;
                                                   };
                                                } else {
                                                   if (
                                                     throw=null)
                                                   and 
                                                   (
                                                     exit_stmt_reached=false){
                                                      t_40:=false;
                                                   } else {
                                                      skip;
                                                   };
                                                };
                                             } else {
                                                skip;
                                             };
                                          
                                          }
                                       ;
                                    } else {
                                       skip;
                                    };
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       if t_40=true   {
                                             var t_39:SourcesHomovoc_AVLNode2+null;
                                             if (
                                               throw=null)
                                             and 
                                             (
                                               exit_stmt_reached=false){
                                                if isEmptyOrNull[newNode]{
                                                   throw:=java_lang_NullPointerExceptionLit;
                                                } else {
                                                   call getParent[newNode,throw,t_39];
                                                };
                                             } else {
                                                skip;
                                             };
                                             if (
                                               throw=null)
                                             and 
                                             (
                                               exit_stmt_reached=false){
                                                var_17_keyNode:=t_39;
                                             } else {
                                                skip;
                                             };
                                             if (
                                               throw=null)
                                             and 
                                             (
                                               exit_stmt_reached=false){
                                                var_18_found:=true;
                                             } else {
                                                skip;
                                             };
                                          
                                          }
                                        else {
                                          skip;
                                       };
                                    } else {
                                       skip;
                                    };
                                 
                                 }
                               else {
                                 skip;
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[newNode]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 call getParent[newNode,throw,t_44];
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[t_44]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 t_45:=t_44.SourcesHomovoc_AVLNode2_height;
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[t_44]
                              or 
                              isEmptyOrNull[t_44]
                              {
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 t_44.SourcesHomovoc_AVLNode2_height:=fun_java_primitive_integer_value_add[t_44.SourcesHomovoc_AVLNode2_height,JavaPrimitiveIntegerLiteral1];
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[newNode]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 call getParent[newNode,throw,t_46];
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              newNode:=t_46;
                           } else {
                              skip;
                           };
                        
                        }
                      else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           var_18_found:=true;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_51:=(neq[newNode.SourcesHomovoc_AVLNode2_parent,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_51=true   {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_52:=Not[var_18_found];
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_52=true{
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    t_50:=true;
                                 } else {
                                    skip;
                                 };
                              } else {
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    t_50:=false;
                                 } else {
                                    skip;
                                 };
                              };
                           } else {
                              skip;
                           };
                        
                        }
                      else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_50:=false;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_19_ws_5:=t_50;
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_17_keyNode;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesHomovoc_AVLTree2::deleteBeforeAdjustment[
  var thiz:SourcesHomovoc_AVLTree2,
  var throw:java_lang_Throwable+null,
  var return:SourcesHomovoc_AVLNode2+null,
  var value:JavaPrimitiveIntegerValue] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_16:boolean;
            var t_17:boolean;
            var t_18:boolean;
            var t_33:boolean;
            var var_9_currentNode:SourcesHomovoc_AVLNode2+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_9_currentNode:=thiz.SourcesHomovoc_AVLTree2_root;
               };
            } else {
               skip;
            };
            var var_10_found:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_10_found:=false;
            } else {
               skip;
            };
            var var_11_ws_2:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_17:=(neq[var_9_currentNode,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_17=true   {
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_18:=Not[var_10_found];
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_18=true{
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_16:=true;
                           } else {
                              skip;
                           };
                        } else {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_16:=false;
                           } else {
                              skip;
                           };
                        };
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_16:=false;
                  } else {
                     skip;
                  };
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_11_ws_2:=t_16;
            } else {
               skip;
            };
            while liftExpression[var_11_ws_2]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_20:boolean;
                  var t_21:boolean;
                  var t_22:boolean;
                  var t_23:boolean;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_20:=(equ[var_9_currentNode.SourcesHomovoc_AVLNode2_value,
                        value]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_20=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           var_10_found:=true;
                        } else {
                           skip;
                        };
                     } else    {
                           var t_19:boolean;
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_19:=(pred_java_primitive_integer_value_lt[value,
                                                                  var_9_currentNode.SourcesHomovoc_AVLNode2_value]=>(true)else(false));
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_19=true{
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    if isEmptyOrNull[var_9_currentNode]{
                                       throw:=java_lang_NullPointerExceptionLit;
                                    } else {
                                       var_9_currentNode:=var_9_currentNode.SourcesHomovoc_AVLNode2_left;
                                    };
                                 } else {
                                    skip;
                                 };
                              } else {
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    if isEmptyOrNull[var_9_currentNode]{
                                       throw:=java_lang_NullPointerExceptionLit;
                                    } else {
                                       var_9_currentNode:=var_9_currentNode.SourcesHomovoc_AVLNode2_right;
                                    };
                                 } else {
                                    skip;
                                 };
                              };
                           } else {
                              skip;
                           };
                        
                        }
                     ;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_22:=(neq[var_9_currentNode,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_22=true   {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_23:=Not[var_10_found];
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_23=true{
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    t_21:=true;
                                 } else {
                                    skip;
                                 };
                              } else {
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    t_21:=false;
                                 } else {
                                    skip;
                                 };
                              };
                           } else {
                              skip;
                           };
                        
                        }
                      else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_21:=false;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_11_ws_2:=t_21;
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_33:=(neq[var_9_currentNode,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_33=true   {
                     var t_24:boolean;
                     var t_30:SourcesHomovoc_AVLNode2+null;
                     var t_32:boolean;
                     var var_12_ws_3:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[var_9_currentNode]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call isLeaf[var_9_currentNode,throw,t_24];
                        };
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_12_ws_3:=Not[t_24];
                     } else {
                        skip;
                     };
                     while liftExpression[var_12_ws_3]
                     and 
                     (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false)
                     
                        {
                           var t_27:JavaPrimitiveIntegerValue;
                           var t_28:boolean;
                           var t_29:boolean;
                           var var_13_replacement:SourcesHomovoc_AVLNode2+null;
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_13_replacement:=((SourcesHomovoc_AVLNode2+null) & (null));
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[var_9_currentNode]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 call getBalanceFactor[var_9_currentNode,throw,t_27];
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_28:=(pred_java_primitive_integer_value_lt[t_27,
                                                                  JavaPrimitiveIntegerLiteral0]=>(true)else(false));
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_28=true   {
                                    var t_25:SourcesHomovoc_AVLNode2+null;
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       if isEmptyOrNull[var_9_currentNode]
                                       or 
                                       isEmptyOrNull[var_9_currentNode.SourcesHomovoc_AVLNode2_right]
                                       {
                                          throw:=java_lang_NullPointerExceptionLit;
                                       } else {
                                          call getLeftmost[var_9_currentNode.SourcesHomovoc_AVLNode2_right,throw,t_25];
                                       };
                                    } else {
                                       skip;
                                    };
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       var_13_replacement:=t_25;
                                    } else {
                                       skip;
                                    };
                                 
                                 }
                               else    {
                                    var t_26:SourcesHomovoc_AVLNode2+null;
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       if isEmptyOrNull[var_9_currentNode]
                                       or 
                                       isEmptyOrNull[var_9_currentNode.SourcesHomovoc_AVLNode2_left]
                                       {
                                          throw:=java_lang_NullPointerExceptionLit;
                                       } else {
                                          call getRightmost[var_9_currentNode.SourcesHomovoc_AVLNode2_left,throw,t_26];
                                       };
                                    } else {
                                       skip;
                                    };
                                    if (
                                      throw=null)
                                    and 
                                    (
                                      exit_stmt_reached=false){
                                       var_13_replacement:=t_26;
                                    } else {
                                       skip;
                                    };
                                 
                                 }
                              ;
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[var_9_currentNode]
                              or 
                              isEmptyOrNull[var_13_replacement]
                              {
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 var_9_currentNode.SourcesHomovoc_AVLNode2_value:=var_13_replacement.SourcesHomovoc_AVLNode2_value;
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_9_currentNode:=var_13_replacement;
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[var_9_currentNode]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 call isLeaf[var_9_currentNode,throw,t_29];
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_12_ws_3:=Not[t_29];
                           } else {
                              skip;
                           };
                        
                        }
                     ;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[var_9_currentNode]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call getParent[var_9_currentNode,throw,t_30];
                        };
                     } else {
                        skip;
                     };
                     var var_14_parent:SourcesHomovoc_AVLNode2+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_14_parent:=t_30;
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_32:=(equ[var_14_parent,
                           null]=>(true)else(false));
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_32=true{
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[thiz]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 thiz.SourcesHomovoc_AVLTree2_root:=((SourcesHomovoc_AVLNode2+null) & (null));
                              };
                           } else {
                              skip;
                           };
                        } else    {
                              var t_31:boolean;
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 t_31:=(equ[var_9_currentNode,
                                    var_14_parent.SourcesHomovoc_AVLNode2_left]=>(true)else(false));
                              } else {
                                 skip;
                              };
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 if t_31=true{
                                    if isEmptyOrNull[var_14_parent]{
                                       throw:=java_lang_NullPointerExceptionLit;
                                    } else {
                                       call setLeft[var_14_parent,throw,((SourcesHomovoc_AVLNode2+null) & (null))];
                                    };
                                 } else {
                                    if isEmptyOrNull[var_14_parent]{
                                       throw:=java_lang_NullPointerExceptionLit;
                                    } else {
                                       call setRight[var_14_parent,throw,((SourcesHomovoc_AVLNode2+null) & (null))];
                                    };
                                 };
                              } else {
                                 skip;
                              };
                           
                           }
                        ;
                     } else {
                        skip;
                     };
                     if isEmptyOrNull[thiz]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call updateHeights[thiz,throw,var_14_parent];
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false)   {
                           return:=var_14_parent;
                           exit_stmt_reached:=true;
                        
                        }
                      else {
                        skip;
                     };
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=((SourcesHomovoc_AVLNode2+null) & (null));
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesHomovoc_AVLTree2::adjustTreeByRotation[
  var thiz:SourcesHomovoc_AVLTree2,
  var throw:java_lang_Throwable+null,
  var return:SourcesHomovoc_AVLNode2+null,
  var keyNode:SourcesHomovoc_AVLNode2+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_55:JavaPrimitiveIntegerValue;
            var t_65:boolean;
            var t_67:boolean;
            var var_23_newKeyNode:SourcesHomovoc_AVLNode2+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_23_newKeyNode:=((SourcesHomovoc_AVLNode2+null) & (null));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[keyNode]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call getBalanceFactor[keyNode,throw,t_55];
               };
            } else {
               skip;
            };
            var var_24_bf_keyNode:JavaPrimitiveIntegerValue;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_24_bf_keyNode:=t_55;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_65:=(equ[var_24_bf_keyNode,
                  JavaPrimitiveIntegerLiteral2]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_65=true   {
                     var t_57:JavaPrimitiveIntegerValue;
                     var t_58:boolean;
                     var t_59:SourcesHomovoc_AVLNode2+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[keyNode]
                        or 
                        isEmptyOrNull[keyNode.SourcesHomovoc_AVLNode2_left]
                        {
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call getBalanceFactor[keyNode.SourcesHomovoc_AVLNode2_left,throw,t_57];
                        };
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_58:=(equ[t_57,
                           JavaPrimitiveIntegerLiteralMinus1]=>(true)else(false));
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_58=true   {
                              var t_56:SourcesHomovoc_AVLNode2+null;
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 if isEmptyOrNull[keyNode]
                                 or 
                                 isEmptyOrNull[keyNode.SourcesHomovoc_AVLNode2_left]
                                 {
                                    throw:=java_lang_NullPointerExceptionLit;
                                 } else {
                                    call rotateLeft[keyNode.SourcesHomovoc_AVLNode2_left,throw,t_56];
                                 };
                              } else {
                                 skip;
                              };
                              var var_25_node:SourcesHomovoc_AVLNode2+null;
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 var_25_node:=t_56;
                              } else {
                                 skip;
                              };
                              if isEmptyOrNull[keyNode]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 call setLeft[keyNode,throw,var_25_node];
                              };
                           
                           }
                         else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[keyNode]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call rotateRight[keyNode,throw,t_59];
                        };
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_23_newKeyNode:=t_59;
                     } else {
                        skip;
                     };
                  
                  }
                else    {
                     var t_64:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_64:=(equ[var_24_bf_keyNode,
                           JavaPrimitiveIntegerLiteralMinus2]=>(true)else(false));
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_64=true   {
                              var t_61:JavaPrimitiveIntegerValue;
                              var t_62:boolean;
                              var t_63:SourcesHomovoc_AVLNode2+null;
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 if isEmptyOrNull[keyNode]
                                 or 
                                 isEmptyOrNull[keyNode.SourcesHomovoc_AVLNode2_right]
                                 {
                                    throw:=java_lang_NullPointerExceptionLit;
                                 } else {
                                    call getBalanceFactor[keyNode.SourcesHomovoc_AVLNode2_right,throw,t_61];
                                 };
                              } else {
                                 skip;
                              };
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 t_62:=(equ[t_61,
                                    JavaPrimitiveIntegerLiteral1]=>(true)else(false));
                              } else {
                                 skip;
                              };
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 if t_62=true   {
                                       var t_60:SourcesHomovoc_AVLNode2+null;
                                       if (
                                         throw=null)
                                       and 
                                       (
                                         exit_stmt_reached=false){
                                          if isEmptyOrNull[keyNode]
                                          or 
                                          isEmptyOrNull[keyNode.SourcesHomovoc_AVLNode2_right]
                                          {
                                             throw:=java_lang_NullPointerExceptionLit;
                                          } else {
                                             call rotateLeft[keyNode.SourcesHomovoc_AVLNode2_right,throw,t_60];
                                          };
                                       } else {
                                          skip;
                                       };
                                       var var_26_node:SourcesHomovoc_AVLNode2+null;
                                       if (
                                         throw=null)
                                       and 
                                       (
                                         exit_stmt_reached=false){
                                          var_26_node:=t_60;
                                       } else {
                                          skip;
                                       };
                                       if isEmptyOrNull[keyNode]{
                                          throw:=java_lang_NullPointerExceptionLit;
                                       } else {
                                          call setRight[keyNode,throw,var_26_node];
                                       };
                                    
                                    }
                                  else {
                                    skip;
                                 };
                              } else {
                                 skip;
                              };
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 if isEmptyOrNull[keyNode]{
                                    throw:=java_lang_NullPointerExceptionLit;
                                 } else {
                                    call rotateLeft[keyNode,throw,t_63];
                                 };
                              } else {
                                 skip;
                              };
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 var_23_newKeyNode:=t_63;
                              } else {
                                 skip;
                              };
                           
                           }
                         else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                  
                  }
               ;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_67:=(equ[keyNode.SourcesHomovoc_AVLNode2_parent,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_67=true   {
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[thiz]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           thiz.SourcesHomovoc_AVLTree2_root:=var_23_newKeyNode;
                        };
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[thiz.SourcesHomovoc_AVLTree2_root]
                        or 
                        isEmptyOrNull[thiz]
                        {
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           (thiz.SourcesHomovoc_AVLTree2_root).SourcesHomovoc_AVLNode2_parent:=((SourcesHomovoc_AVLNode2+null) & (null));
                        };
                     } else {
                        skip;
                     };
                  
                  }
                else    {
                     var t_66:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_66:=(equ[keyNode,
                           (keyNode.SourcesHomovoc_AVLNode2_parent).SourcesHomovoc_AVLNode2_left]=>(true)else(false));
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_66=true{
                           if isEmptyOrNull[keyNode]
                           or 
                           isEmptyOrNull[keyNode.SourcesHomovoc_AVLNode2_parent]
                           {
                              throw:=java_lang_NullPointerExceptionLit;
                           } else {
                              call setLeft[keyNode.SourcesHomovoc_AVLNode2_parent,throw,var_23_newKeyNode];
                           };
                        } else {
                           if isEmptyOrNull[keyNode]
                           or 
                           isEmptyOrNull[keyNode.SourcesHomovoc_AVLNode2_parent]
                           {
                              throw:=java_lang_NullPointerExceptionLit;
                           } else {
                              call setRight[keyNode.SourcesHomovoc_AVLNode2_parent,throw,var_23_newKeyNode];
                           };
                        };
                     } else {
                        skip;
                     };
                     if isEmptyOrNull[var_23_newKeyNode]
                     or 
                     isEmptyOrNull[var_23_newKeyNode.SourcesHomovoc_AVLNode2_parent]
                     {
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call adjustHeight[var_23_newKeyNode.SourcesHomovoc_AVLNode2_parent,throw];
                     };
                  
                  }
               ;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_23_newKeyNode;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesHomovoc_AVLTree2::delete[
  var thiz:SourcesHomovoc_AVLTree2,
  var throw:java_lang_Throwable+null,
  var value:JavaPrimitiveIntegerValue] 
Specification 
{
  SpecCase #0 {
   requires {
      true=true
   }
   
   ensures {
      instanceOf[throw',
                java_lang_Exception]
      implies 
              liftExpression[false]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                (
                  equ[fun_java_primitive_integer_value_size_of[fun_reach[thiz'.SourcesHomovoc_AVLTree2_root',SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right'+SourcesHomovoc_AVLNode2_left']],
                     SK_jml_pred_java_primitive_integer_value_sub_ARG_result_2]
                  implies 
                          (
                            some n:SourcesHomovoc_AVLNode2+null | {
                              liftExpression[fun_set_contains[fun_reach[thiz.SourcesHomovoc_AVLTree2_root,SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right+SourcesHomovoc_AVLNode2_left],n]]
                              and 
                              equ[n.SourcesHomovoc_AVLNode2_value',
                                 value']
                            
                            }
                          )
                )
                and 
                (
                  (
                    some n:SourcesHomovoc_AVLNode2+null | {
                      liftExpression[fun_set_contains[fun_reach[thiz.SourcesHomovoc_AVLTree2_root,SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right+SourcesHomovoc_AVLNode2_left],n]]
                      and 
                      equ[n.SourcesHomovoc_AVLNode2_value',
                         value']
                    
                    }
                  )
                  implies 
                          equ[fun_java_primitive_integer_value_size_of[fun_reach[thiz'.SourcesHomovoc_AVLTree2_root',SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right'+SourcesHomovoc_AVLNode2_left']],
                             SK_jml_pred_java_primitive_integer_value_sub_ARG_result_2]
                )
              )
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_7:SourcesHomovoc_AVLNode2+null;
            var t_11:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call deleteBeforeAdjustment[thiz,throw,t_7,value];
               };
            } else {
               skip;
            };
            var var_3_parentOfDeletedLeaf:SourcesHomovoc_AVLNode2+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_3_parentOfDeletedLeaf:=t_7;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_11:=(neq[var_3_parentOfDeletedLeaf,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_11=true   {
                     var t_8:SourcesHomovoc_AVLNode2+null;
                     var t_10:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[thiz]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call detectKeyNode[thiz,throw,t_8,var_3_parentOfDeletedLeaf];
                        };
                     } else {
                        skip;
                     };
                     var var_4_keyNode:SourcesHomovoc_AVLNode2+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_4_keyNode:=t_8;
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_10:=(neq[var_4_keyNode,
                           null]=>(true)else(false));
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_10=true   {
                              var t_9:SourcesHomovoc_AVLNode2+null;
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 if isEmptyOrNull[thiz]{
                                    throw:=java_lang_NullPointerExceptionLit;
                                 } else {
                                    call adjustTreeByRotation[thiz,throw,t_9,var_4_keyNode];
                                 };
                              } else {
                                 skip;
                              };
                              var var_5_newkeyNode:SourcesHomovoc_AVLNode2+null;
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 var_5_newkeyNode:=t_9;
                              } else {
                                 skip;
                              };
                              if isEmptyOrNull[var_5_newkeyNode]
                              or 
                              isEmptyOrNull[thiz]
                              {
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 call updateHeights[thiz,throw,var_5_newkeyNode.SourcesHomovoc_AVLNode2_parent];
                              };
                           
                           }
                         else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesHomovoc_AVLTree2::updateHeights[
  var thiz:SourcesHomovoc_AVLTree2,
  var throw:java_lang_Throwable+null,
  var fromParentOfDeletedLeaf:SourcesHomovoc_AVLNode2+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var var_15_currentNode:SourcesHomovoc_AVLNode2+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_15_currentNode:=fromParentOfDeletedLeaf;
            } else {
               skip;
            };
            if isEmptyOrNull[var_15_currentNode]{
               throw:=java_lang_NullPointerExceptionLit;
            } else {
               call adjustHeight[var_15_currentNode,throw];
            };
            var var_16_ws_4:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_16_ws_4:=(neq[var_15_currentNode,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_16_ws_4]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  if isEmptyOrNull[var_15_currentNode]{
                     throw:=java_lang_NullPointerExceptionLit;
                  } else {
                     call adjustHeight[var_15_currentNode,throw];
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_15_currentNode]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        var_15_currentNode:=var_15_currentNode.SourcesHomovoc_AVLNode2_parent;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_16_ws_4:=(neq[var_15_currentNode,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
         
         }
      
      }
      skip;
   
   }


program SourcesHomovoc_AVLTree2::insert[
  var thiz:SourcesHomovoc_AVLTree2,
  var throw:java_lang_Throwable+null,
  var value:JavaPrimitiveIntegerValue] 
Specification 
{
  SpecCase #0 {
   requires {
      all n:SourcesHomovoc_AVLNode2+null | {
        liftExpression[fun_set_contains[fun_reach[thiz.SourcesHomovoc_AVLTree2_root,SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right+SourcesHomovoc_AVLNode2_left],n]]
        implies 
                neq[n.SourcesHomovoc_AVLNode2_value,
                   value]
      
      }
   }
   
   ensures {
      instanceOf[throw',
                java_lang_Exception]
      implies 
              liftExpression[false]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[fun_java_primitive_integer_value_size_of[fun_reach[thiz'.SourcesHomovoc_AVLTree2_root',SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right'+SourcesHomovoc_AVLNode2_left']],
                 SK_jml_pred_java_primitive_integer_value_add_ARG_result_1]
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_6:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_6:=(equ[thiz.SourcesHomovoc_AVLTree2_root,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_6=true   {
                     var t_1:SourcesHomovoc_AVLNode2+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false)   {
                           createObject<SourcesHomovoc_AVLNode2>[t_1];
                           if isEmptyOrNull[t_1]{
                              throw:=java_lang_NullPointerExceptionLit;
                           } else {
                              call Constructor[t_1,throw,value];
                           };
                        
                        }
                      else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[thiz]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           thiz.SourcesHomovoc_AVLTree2_root:=t_1;
                        };
                     } else {
                        skip;
                     };
                  
                  }
                else    {
                     var t_2:SourcesHomovoc_AVLNode2+null;
                     var t_3:SourcesHomovoc_AVLNode2+null;
                     var t_5:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false)   {
                           createObject<SourcesHomovoc_AVLNode2>[t_2];
                           if isEmptyOrNull[t_2]{
                              throw:=java_lang_NullPointerExceptionLit;
                           } else {
                              call Constructor[t_2,throw,value];
                           };
                        
                        }
                      else {
                        skip;
                     };
                     var var_1_newNode:SourcesHomovoc_AVLNode2+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_1_newNode:=t_2;
                     } else {
                        skip;
                     };
                     if isEmptyOrNull[thiz]
                     or 
                     isEmptyOrNull[thiz.SourcesHomovoc_AVLTree2_root]
                     {
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call insertToLeaf[thiz.SourcesHomovoc_AVLTree2_root,throw,var_1_newNode];
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[thiz]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call updateHeightsAndDetectKeyNode[thiz,throw,t_3,var_1_newNode];
                        };
                     } else {
                        skip;
                     };
                     var var_2_keyNode:SourcesHomovoc_AVLNode2+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_2_keyNode:=t_3;
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_5:=(neq[var_2_keyNode,
                           null]=>(true)else(false));
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_5=true   {
                              var t_4:SourcesHomovoc_AVLNode2+null;
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 if isEmptyOrNull[thiz]{
                                    throw:=java_lang_NullPointerExceptionLit;
                                 } else {
                                    call adjustTreeByRotation[thiz,throw,t_4,var_2_keyNode];
                                 };
                              } else {
                                 skip;
                              };
                           
                           }
                         else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                  
                  }
               ;
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesHomovoc_AVLTree2::lookup[
  var thiz:SourcesHomovoc_AVLTree2,
  var throw:java_lang_Throwable+null,
  var return:boolean,
  var value:JavaPrimitiveIntegerValue] 
Specification 
{
  SpecCase #0 {
   requires {
      true=true
   }
   
   ensures {
      instanceOf[throw',
                java_lang_Exception]
      implies 
              liftExpression[false]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                (
                  (
                    some n:SourcesHomovoc_AVLNode2+null | {
                      liftExpression[fun_set_contains[fun_reach[thiz'.SourcesHomovoc_AVLTree2_root',SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right'+SourcesHomovoc_AVLNode2_left'],n]]
                      and 
                      equ[n.SourcesHomovoc_AVLNode2_value',
                         value']
                    
                    }
                  )
                  implies 
                          (
                            return'=true)
                )
                and 
                (
                  (
                    return'=true)
                  implies 
                          (
                            some n:SourcesHomovoc_AVLNode2+null | {
                              liftExpression[fun_set_contains[fun_reach[thiz'.SourcesHomovoc_AVLTree2_root',SourcesHomovoc_AVLNode2,SourcesHomovoc_AVLNode2_right'+SourcesHomovoc_AVLNode2_left'],n]]
                              and 
                              equ[n.SourcesHomovoc_AVLNode2_value',
                                 value']
                            
                            }
                          )
                )
              )
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var var_21_currentNode:SourcesHomovoc_AVLNode2+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_21_currentNode:=thiz.SourcesHomovoc_AVLTree2_root;
               };
            } else {
               skip;
            };
            var var_22_ws_6:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_22_ws_6:=(neq[var_21_currentNode,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_22_ws_6]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_54:boolean;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_54:=(equ[var_21_currentNode.SourcesHomovoc_AVLNode2_value,
                        value]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_54=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false)   {
                              return:=true;
                              exit_stmt_reached:=true;
                           
                           }
                         else {
                           skip;
                        };
                     } else    {
                           var t_53:boolean;
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_53:=(pred_java_primitive_integer_value_lt[value,
                                                                  var_21_currentNode.SourcesHomovoc_AVLNode2_value]=>(true)else(false));
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_53=true{
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    if isEmptyOrNull[var_21_currentNode]{
                                       throw:=java_lang_NullPointerExceptionLit;
                                    } else {
                                       var_21_currentNode:=var_21_currentNode.SourcesHomovoc_AVLNode2_left;
                                    };
                                 } else {
                                    skip;
                                 };
                              } else {
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    if isEmptyOrNull[var_21_currentNode]{
                                       throw:=java_lang_NullPointerExceptionLit;
                                    } else {
                                       var_21_currentNode:=var_21_currentNode.SourcesHomovoc_AVLNode2_right;
                                    };
                                 } else {
                                    skip;
                                 };
                              };
                           } else {
                              skip;
                           };
                        
                        }
                     ;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_22_ws_6:=(neq[var_21_currentNode,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=false;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }



