//-------------- SourcesMatiasDeSanti_LinkedList --------------//
module SourcesMatiasDeSanti_LinkedList
sig SourcesMatiasDeSanti_LinkedList extends java_lang_Object {}
{}
field SourcesMatiasDeSanti_LinkedList_head:(SourcesMatiasDeSanti_LinkedList)->one(SourcesMatiasDeSanti_Node+null) {}

object_invariant
   all n:SourcesMatiasDeSanti_Node+null | {
     equ[fun_set_contains[fun_reach[thiz.SourcesMatiasDeSanti_LinkedList_head,SourcesMatiasDeSanti_Node,SourcesMatiasDeSanti_Node_next],n],
        true]
     implies 
             equ[fun_set_contains[fun_reach[n.SourcesMatiasDeSanti_Node_next,SourcesMatiasDeSanti_Node,SourcesMatiasDeSanti_Node_next],n],
                false]
   
   }

object_invariant
   neq[thiz.SourcesMatiasDeSanti_LinkedList_head,
      null]



program SourcesMatiasDeSanti_LinkedList::Constructor[
  var thiz:SourcesMatiasDeSanti_LinkedList,
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.SourcesMatiasDeSanti_LinkedList_head:=((SourcesMatiasDeSanti_Node+null) & (null));
               };
            } else {
               skip;
            };
            var t_1:SourcesMatiasDeSanti_Node+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  createObject<SourcesMatiasDeSanti_Node>[t_1];
                  if isEmptyOrNull[t_1]{
                     throw:=java_lang_NullPointerExceptionLit;
                  } else {
                     call Constructor[t_1,throw,null];
                  };
               
               }
             else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.SourcesMatiasDeSanti_LinkedList_head:=t_1;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesMatiasDeSanti_LinkedList::remove[
  var thiz:SourcesMatiasDeSanti_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:boolean,
  var index:JavaPrimitiveIntegerValue] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var param_index_2:JavaPrimitiveIntegerValue;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               param_index_2:=index;
            } else {
               skip;
            };
            var t_13:boolean;
            var t_18:SourcesMatiasDeSanti_Node+null;
            var t_19:SourcesMatiasDeSanti_Node+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_13:=(pred_java_primitive_integer_value_lt[param_index_2,
                                                   JavaPrimitiveIntegerLiteral1]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_13=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false)   {
                        return:=false;
                        exit_stmt_reached:=true;
                     
                     }
                   else {
                     skip;
                  };
               } else {
                  skip;
               };
            } else {
               skip;
            };
            var var_7_current:SourcesMatiasDeSanti_Node+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_7_current:=thiz.SourcesMatiasDeSanti_LinkedList_head;
               };
            } else {
               skip;
            };
            var var_8_i:JavaPrimitiveIntegerValue;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_8_i:=JavaPrimitiveIntegerLiteral1;
            } else {
               skip;
            };
            var var_9_ws_3:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_9_ws_3:=(pred_java_primitive_integer_value_lt[var_8_i,
                                                   param_index_2]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_9_ws_3]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_14:SourcesMatiasDeSanti_Node+null;
                  var t_15:boolean;
                  var t_16:SourcesMatiasDeSanti_Node+null;
                  var t_17:JavaPrimitiveIntegerValue;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_7_current]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call getNext[var_7_current,throw,t_14];
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_15:=(equ[t_14,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_15=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false)   {
                              return:=false;
                              exit_stmt_reached:=true;
                           
                           }
                         else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_7_current]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call getNext[var_7_current,throw,t_16];
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_7_current:=t_16;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_17:=var_8_i;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_8_i:=fun_java_primitive_integer_value_add[var_8_i,JavaPrimitiveIntegerLiteral1];
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_9_ws_3:=(pred_java_primitive_integer_value_lt[var_8_i,
                                                         param_index_2]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[var_7_current]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call getNext[var_7_current,throw,t_18];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[t_18]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call getNext[t_18,throw,t_19];
               };
            } else {
               skip;
            };
            if isEmptyOrNull[var_7_current]{
               throw:=java_lang_NullPointerExceptionLit;
            } else {
               call setNext[var_7_current,throw,t_19];
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=true;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesMatiasDeSanti_LinkedList::get[
  var thiz:SourcesMatiasDeSanti_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:java_lang_Object+null,
  var index:JavaPrimitiveIntegerValue] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var param_index_1:JavaPrimitiveIntegerValue;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               param_index_1:=index;
            } else {
               skip;
            };
            var t_6:boolean;
            var t_7:SourcesMatiasDeSanti_Node+null;
            var t_12:java_lang_Object+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_6:=(pred_java_primitive_integer_value_lte[param_index_1,
                                                    JavaPrimitiveIntegerLiteral0]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_6=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false)   {
                        return:=null;
                        exit_stmt_reached:=true;
                     
                     }
                   else {
                     skip;
                  };
               } else {
                  skip;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz.SourcesMatiasDeSanti_LinkedList_head]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call getNext[thiz.SourcesMatiasDeSanti_LinkedList_head,throw,t_7];
               };
            } else {
               skip;
            };
            var var_4_current:SourcesMatiasDeSanti_Node+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_4_current:=t_7;
            } else {
               skip;
            };
            var var_5_i:JavaPrimitiveIntegerValue;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_5_i:=JavaPrimitiveIntegerLiteral1;
            } else {
               skip;
            };
            var var_6_ws_2:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_6_ws_2:=(pred_java_primitive_integer_value_lt[var_5_i,
                                                   param_index_1]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_6_ws_2]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_8:SourcesMatiasDeSanti_Node+null;
                  var t_9:boolean;
                  var t_10:SourcesMatiasDeSanti_Node+null;
                  var t_11:JavaPrimitiveIntegerValue;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_4_current]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call getNext[var_4_current,throw,t_8];
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_9:=(equ[t_8,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_9=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false)   {
                              return:=null;
                              exit_stmt_reached:=true;
                           
                           }
                         else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_4_current]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call getNext[var_4_current,throw,t_10];
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_4_current:=t_10;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_11:=var_5_i;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_5_i:=fun_java_primitive_integer_value_add[var_5_i,JavaPrimitiveIntegerLiteral1];
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_6_ws_2:=(pred_java_primitive_integer_value_lt[var_5_i,
                                                         param_index_1]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[var_4_current]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call getData[var_4_current,throw,t_12];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=t_12;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program SourcesMatiasDeSanti_LinkedList::add[
  var thiz:SourcesMatiasDeSanti_LinkedList,
  var throw:java_lang_Throwable+null,
  var d:java_lang_Object+null] 
Specification 
{
  SpecCase #0 {
   requires {
      true=true
   }
   
   requires {
      not (
        d=null)
   }
   
   ensures {
      instanceOf[throw',
                java_lang_Exception]
      implies 
              liftExpression[false]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                some n:SourcesMatiasDeSanti_Node+null | {
                  equ[n.SourcesMatiasDeSanti_Node_data',
                     d']
                  and 
                  equ[fun_set_contains[fun_reach[thiz'.SourcesMatiasDeSanti_LinkedList_head',SourcesMatiasDeSanti_Node,SourcesMatiasDeSanti_Node_next'],n],
                     true]
                  and 
                  equ[fun_java_primitive_integer_value_size_of[fun_reach[thiz'.SourcesMatiasDeSanti_LinkedList_head',SourcesMatiasDeSanti_Node,SourcesMatiasDeSanti_Node_next']],
                     SK_jml_pred_java_primitive_integer_value_add_ARG_result_0]
                
                }
              )
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var param_d_0:java_lang_Object+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               param_d_0:=d;
            } else {
               skip;
            };
            var t_2:SourcesMatiasDeSanti_Node+null;
            var t_3:SourcesMatiasDeSanti_Node+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  createObject<SourcesMatiasDeSanti_Node>[t_2];
                  if isEmptyOrNull[t_2]{
                     throw:=java_lang_NullPointerExceptionLit;
                  } else {
                     call Constructor[t_2,throw,param_d_0];
                  };
               
               }
             else {
               skip;
            };
            var var_1_temp:SourcesMatiasDeSanti_Node+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_1_temp:=t_2;
            } else {
               skip;
            };
            var var_2_current:SourcesMatiasDeSanti_Node+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_2_current:=thiz.SourcesMatiasDeSanti_LinkedList_head;
               };
            } else {
               skip;
            };
            var var_3_ws_1:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[var_2_current]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call getNext[var_2_current,throw,t_3];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_3_ws_1:=(neq[t_3,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_3_ws_1]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_4:SourcesMatiasDeSanti_Node+null;
                  var t_5:SourcesMatiasDeSanti_Node+null;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_2_current]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call getNext[var_2_current,throw,t_4];
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_2_current:=t_4;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_2_current]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call getNext[var_2_current,throw,t_5];
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_3_ws_1:=(neq[t_5,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            if isEmptyOrNull[var_2_current]{
               throw:=java_lang_NullPointerExceptionLit;
            } else {
               call setNext[var_2_current,throw,var_1_temp];
            };
         
         }
      
      }
      skip;
   
   }



