//-------------- SourcesMatiasDeSanti_RedBlackTree --------------//
module SourcesMatiasDeSanti_RedBlackTree
sig SourcesMatiasDeSanti_RedBlackTree extends java_lang_Object {}
{}
field SourcesMatiasDeSanti_RedBlackTree_root:(SourcesMatiasDeSanti_RedBlackTree)->one(SourcesMatiasDeSanti_RedBlackNode+null) {}

object_invariant
   neq[thiz.SourcesMatiasDeSanti_RedBlackTree_root,
      null]
   implies 
           equ[(thiz.SourcesMatiasDeSanti_RedBlackTree_root).SourcesMatiasDeSanti_RedBlackNode_color,
              JavaPrimitiveIntegerLiteral1]

object_invariant
   neq[thiz.SourcesMatiasDeSanti_RedBlackTree_root,
      null]
   implies 
           equ[(thiz.SourcesMatiasDeSanti_RedBlackTree_root).SourcesMatiasDeSanti_RedBlackNode_parent,
              null]

object_invariant
   all n:SourcesMatiasDeSanti_RedBlackNode+null | {
     some SK_jml_pred_java_primitive_integer_value_add_ARG_result_0:JavaPrimitiveIntegerValue,
     SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_0:boolean,
     SK_jml_pred_java_primitive_integer_value_add_ARG_result_1:JavaPrimitiveIntegerValue,
     SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_1:boolean | {
       pred_java_primitive_integer_value_add[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                            JavaPrimitiveIntegerLiteral1,
                                            SK_jml_pred_java_primitive_integer_value_add_ARG_result_0,
                                            SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_0]
       and 
       (
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral0)
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral1)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral2)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral3)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral4)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral5)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_0=JavaPrimitiveIntegerLiteral6)
       )
       and 
       pred_java_primitive_integer_value_add[(n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                            JavaPrimitiveIntegerLiteral1,
                                            SK_jml_pred_java_primitive_integer_value_add_ARG_result_1,
                                            SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_1]
       and 
       (
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_1=JavaPrimitiveIntegerLiteral0)
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_1=JavaPrimitiveIntegerLiteral1)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_1=JavaPrimitiveIntegerLiteral2)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_1=JavaPrimitiveIntegerLiteral3)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_1=JavaPrimitiveIntegerLiteral4)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_1=JavaPrimitiveIntegerLiteral5)
         
         or 
         (
           SK_jml_pred_java_primitive_integer_value_add_ARG_result_1=JavaPrimitiveIntegerLiteral6)
       )
       and 
       (
         equ[fun_set_contains[fun_reach[thiz.SourcesMatiasDeSanti_RedBlackTree_root,SourcesMatiasDeSanti_RedBlackNode,SourcesMatiasDeSanti_RedBlackNode_right+SourcesMatiasDeSanti_RedBlackNode_left+SourcesMatiasDeSanti_RedBlackNode_parent],n],
            true]
         implies 
                 (
                   equ[fun_set_contains[fun_reach[n.SourcesMatiasDeSanti_RedBlackNode_left,SourcesMatiasDeSanti_RedBlackNode,SourcesMatiasDeSanti_RedBlackNode_left+SourcesMatiasDeSanti_RedBlackNode_right],n],
                      false]
                   and 
                   equ[fun_set_contains[fun_reach[n.SourcesMatiasDeSanti_RedBlackNode_right,SourcesMatiasDeSanti_RedBlackNode,SourcesMatiasDeSanti_RedBlackNode_left+SourcesMatiasDeSanti_RedBlackNode_right],n],
                      false]
                   and 
                   (
                     neq[n.SourcesMatiasDeSanti_RedBlackNode_left,
                        null]
                     implies 
                             equ[(n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_parent,
                                n]
                   )
                   and 
                   (
                     neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                        null]
                     implies 
                             equ[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_parent,
                                n]
                   )
                   and 
                   (
                     all m:SourcesMatiasDeSanti_RedBlackNode+null | {
                       equ[fun_set_contains[fun_reach[n.SourcesMatiasDeSanti_RedBlackNode_left,SourcesMatiasDeSanti_RedBlackNode,SourcesMatiasDeSanti_RedBlackNode_left+SourcesMatiasDeSanti_RedBlackNode_right],m],
                          true]
                       implies 
                               pred_java_primitive_integer_value_lt[m.SourcesMatiasDeSanti_RedBlackNode_data,
                                                                   n.SourcesMatiasDeSanti_RedBlackNode_data]
                     
                     }
                   )
                   and 
                   (
                     all m:SourcesMatiasDeSanti_RedBlackNode+null | {
                       equ[fun_set_contains[fun_reach[n.SourcesMatiasDeSanti_RedBlackNode_right,SourcesMatiasDeSanti_RedBlackNode,SourcesMatiasDeSanti_RedBlackNode_left+SourcesMatiasDeSanti_RedBlackNode_right],m],
                          true]
                       implies 
                               pred_java_primitive_integer_value_gt[m.SourcesMatiasDeSanti_RedBlackNode_data,
                                                                   n.SourcesMatiasDeSanti_RedBlackNode_data]
                     
                     }
                   )
                   and 
                   (
                     (
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       or 
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                     )
                     implies 
                             neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                                n.SourcesMatiasDeSanti_RedBlackNode_left]
                   )
                   and 
                   (
                     (
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral1]
                     )
                     implies 
                             equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                JavaPrimitiveIntegerLiteral1]
                   )
                   and 
                   (
                     (
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral0]
                     )
                     implies 
                             equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                JavaPrimitiveIntegerLiteral0]
                   )
                   and 
                   (
                     (
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral1]
                     )
                     implies 
                             (
                               equ[(n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_color,
                                  JavaPrimitiveIntegerLiteral0]
                               and 
                               equ[(n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                  JavaPrimitiveIntegerLiteral0]
                               and 
                               equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                  JavaPrimitiveIntegerLiteral1]
                             )
                   )
                   and 
                   (
                     (
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral0]
                     )
                     implies 
                             (
                               equ[(n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_color,
                                  JavaPrimitiveIntegerLiteral0]
                               and 
                               equ[(n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                  JavaPrimitiveIntegerLiteral0]
                               and 
                               equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                  JavaPrimitiveIntegerLiteral0]
                             )
                   )
                   and 
                   (
                     (
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral1]
                     )
                     implies 
                             (
                               equ[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_color,
                                  JavaPrimitiveIntegerLiteral0]
                               and 
                               equ[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                  JavaPrimitiveIntegerLiteral0]
                               and 
                               equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                  JavaPrimitiveIntegerLiteral1]
                             )
                   )
                   and 
                   (
                     (
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral0]
                     )
                     implies 
                             (
                               equ[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_color,
                                  JavaPrimitiveIntegerLiteral0]
                               and 
                               equ[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                  JavaPrimitiveIntegerLiteral0]
                               and 
                               equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                  JavaPrimitiveIntegerLiteral0]
                             )
                   )
                   and 
                   (
                     (
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral1]
                       and 
                       pred_java_primitive_integer_value_gte[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                                            (n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_blackHeight]
                     )
                     implies 
                             equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                SK_jml_pred_java_primitive_integer_value_add_ARG_result_0]
                   )
                   and 
                   (
                     (
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral1]
                       and 
                       pred_java_primitive_integer_value_lt[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                                           (n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_blackHeight]
                     )
                     implies 
                             equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                SK_jml_pred_java_primitive_integer_value_add_ARG_result_1]
                   )
                   and 
                   (
                     (
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral0]
                       and 
                       pred_java_primitive_integer_value_gte[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                                            (n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_blackHeight]
                     )
                     implies 
                             equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                (n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_blackHeight]
                   )
                   and 
                   (
                     (
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                       and 
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                       and 
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral0]
                       and 
                       pred_java_primitive_integer_value_lt[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                                           (n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_blackHeight]
                     )
                     implies 
                             equ[n.SourcesMatiasDeSanti_RedBlackNode_blackHeight,
                                (n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_blackHeight]
                   )
                   and 
                   (
                     (
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral0]
                       and 
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_left,
                          null]
                     )
                     implies 
                             equ[(n.SourcesMatiasDeSanti_RedBlackNode_left).SourcesMatiasDeSanti_RedBlackNode_color,
                                JavaPrimitiveIntegerLiteral1]
                   )
                   and 
                   (
                     (
                       equ[n.SourcesMatiasDeSanti_RedBlackNode_color,
                          JavaPrimitiveIntegerLiteral0]
                       and 
                       neq[n.SourcesMatiasDeSanti_RedBlackNode_right,
                          null]
                     )
                     implies 
                             equ[(n.SourcesMatiasDeSanti_RedBlackNode_right).SourcesMatiasDeSanti_RedBlackNode_color,
                                JavaPrimitiveIntegerLiteral1]
                   )
                 )
       )
     
     }
   
   }

object_invariant
   not (
     thiz.SourcesMatiasDeSanti_RedBlackTree_root=null)



program SourcesMatiasDeSanti_RedBlackTree::Constructor[
  var thiz:SourcesMatiasDeSanti_RedBlackTree,
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         if (
           throw=null)
         and 
         (
           exit_stmt_reached=false){
            if isEmptyOrNull[thiz]{
               throw:=java_lang_NullPointerExceptionLit;
            } else {
               thiz.SourcesMatiasDeSanti_RedBlackTree_root:=((SourcesMatiasDeSanti_RedBlackNode+null) & (null));
            };
         } else {
            skip;
         };
      
      }
      skip;
   
   }


program SourcesMatiasDeSanti_RedBlackTree::add[
  var thiz:SourcesMatiasDeSanti_RedBlackTree,
  var throw:java_lang_Throwable+null,
  var t:SourcesMatiasDeSanti_RedBlackTree+null,
  var obj:JavaPrimitiveIntegerValue] 
Specification 
{
  SpecCase #0 {
   requires {
      true=true
   }
   
   ensures {
      instanceOf[throw',
                java_util_NoSuchElementException]
      implies 
              liftExpression[false]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                all rbn:SourcesMatiasDeSanti_RedBlackNode+null | {
                  liftExpression[fun_set_contains[fun_reach[thiz'.SourcesMatiasDeSanti_RedBlackTree_root',SourcesMatiasDeSanti_RedBlackNode,SourcesMatiasDeSanti_RedBlackNode_left'+SourcesMatiasDeSanti_RedBlackNode_right'],rbn]]
                  implies 
                          equ[rbn.SourcesMatiasDeSanti_RedBlackNode_left',
                             null]
                
                }
              )
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var var_1_flag:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_1_flag:=true;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if true=true   {
                     var t_1:JavaPrimitiveIntegerValue;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_1:=obj;
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        obj:=fun_java_primitive_integer_value_add[obj,JavaPrimitiveIntegerLiteral1];
                     } else {
                        skip;
                     };
                  
                  }
                else    {
                     var t_2:JavaPrimitiveIntegerValue;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_2:=obj;
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        obj:=fun_java_primitive_integer_value_add[obj,JavaPrimitiveIntegerLiteralMinus1];
                     } else {
                        skip;
                     };
                  
                  }
               ;
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }



