sig modelfields_TreeSet extends java_lang_Object {}
{}




pred modelfields_TreeSetCondition15[
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  modelfields_TreeSet_root:univ->univ,
  thiz:univ,
  variant_0:univ
]{
   not (
     gte[fun_set_size[fun_reach[thiz.modelfields_TreeSet_root,modelfields_TreeSetEntry,modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right]],
        variant_0]
   )

}

pred modelfields_TreeSetCondition14[
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  modelfields_TreeSet_root:univ->univ,
  thiz:univ,
  variant_0:univ
]{
   gte[fun_set_size[fun_reach[thiz.modelfields_TreeSet_root,modelfields_TreeSetEntry,modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right]],
      variant_0]

}

pred modelfields_TreeSetEntry_modelfields_TreeSetEntry_blackHeight_abstraction[
  modelfields_TreeSetEntry_blackHeight:univ->univ,
  modelfields_TreeSetEntry_color:univ->univ,
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  thiz:univ
]{
   (
     (
       equ[thiz.modelfields_TreeSetEntry_left,
          null]
       and 
       equ[thiz.modelfields_TreeSetEntry_right,
          null]
     )
     implies 
             equ[thiz.modelfields_TreeSetEntry_blackHeight,
                1]
   )
   and 
   (
     (
       neq[thiz.modelfields_TreeSetEntry_left,
          null]
       and 
       equ[thiz.modelfields_TreeSetEntry_right,
          null]
     )
     implies 
             (
               equ[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_color,
                  false]
               and 
               equ[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_blackHeight,
                  1]
               and 
               equ[thiz.modelfields_TreeSetEntry_blackHeight,
                  1]
             )
   )
   and 
   (
     (
       equ[thiz.modelfields_TreeSetEntry_left,
          null]
       and 
       neq[thiz.modelfields_TreeSetEntry_right,
          null]
     )
     implies 
             (
               equ[(thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_color,
                  false]
               and 
               equ[(thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_blackHeight,
                  1]
               and 
               equ[thiz.modelfields_TreeSetEntry_blackHeight,
                  1]
             )
   )
   and 
   (
     (
       neq[thiz.modelfields_TreeSetEntry_left,
          null]
       and 
       neq[thiz.modelfields_TreeSetEntry_right,
          null]
       and 
       equ[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_color,
          false]
       and 
       equ[(thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_color,
          false]
     )
     implies 
             (
               equ[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_blackHeight,
                  (thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_blackHeight]
               and 
               equ[thiz.modelfields_TreeSetEntry_blackHeight,
                  (thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_blackHeight]
             )
   )
   and 
   (
     (
       neq[thiz.modelfields_TreeSetEntry_left,
          null]
       and 
       neq[thiz.modelfields_TreeSetEntry_right,
          null]
       and 
       equ[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_color,
          true]
       and 
       equ[(thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_color,
          true]
     )
     implies 
             (
               equ[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_blackHeight,
                  (thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_blackHeight]
               and 
               equ[thiz.modelfields_TreeSetEntry_blackHeight,
                  add[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_blackHeight,1]]
             )
   )
   and 
   (
     (
       neq[thiz.modelfields_TreeSetEntry_left,
          null]
       and 
       neq[thiz.modelfields_TreeSetEntry_right,
          null]
       and 
       equ[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_color,
          false]
       and 
       equ[(thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_color,
          true]
     )
     implies 
             (
               equ[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_blackHeight,
                  add[(thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_blackHeight,1]]
               and 
               equ[thiz.modelfields_TreeSetEntry_blackHeight,
                  (thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_blackHeight]
             )
   )
   and 
   (
     (
       neq[thiz.modelfields_TreeSetEntry_left,
          null]
       and 
       neq[thiz.modelfields_TreeSetEntry_right,
          null]
       and 
       equ[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_color,
          true]
       and 
       equ[(thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_color,
          false]
     )
     implies 
             (
               equ[(thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_blackHeight,
                  add[(thiz.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_blackHeight,1]]
               and 
               equ[thiz.modelfields_TreeSetEntry_blackHeight,
                  (thiz.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_blackHeight]
             )
   )

}

pred modelfields_TreeSetCondition3[
  thiz:univ
]{
   not (
     isEmptyOrNull[thiz])

}

pred precondition_modelfields_TreeSet_contains_0[
  modelfields_TreeSetEntry_blackHeight:univ->univ,
  modelfields_TreeSetEntry_color:univ->univ,
  modelfields_TreeSetEntry_key:univ->univ,
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_parent:univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  modelfields_TreeSet_BLACK:univ->univ,
  modelfields_TreeSet_RED:univ->univ,
  modelfields_TreeSet_modCount:univ->univ,
  modelfields_TreeSet_root:univ->univ,
  modelfields_TreeSet_size:univ->univ,
  return:univ,
  thiz:univ,
  throw:univ,
  usedObjects:univ,
  value:univ
]{
   (
     all objx:modelfields_TreeSetEntry | {
       modelfields_TreeSetEntry_modelfields_TreeSetEntry_blackHeight_abstraction[modelfields_TreeSetEntry_blackHeight,
                                                                                modelfields_TreeSetEntry_color,
                                                                                modelfields_TreeSetEntry_left,
                                                                                modelfields_TreeSetEntry_right,
                                                                                objx]
     
     }
   )
   and 
   modelfields_TreeSet_object_invariant[modelfields_TreeSetEntry_color,
                                       modelfields_TreeSetEntry_key,
                                       modelfields_TreeSetEntry_left,
                                       modelfields_TreeSetEntry_parent,
                                       modelfields_TreeSetEntry_right,
                                       modelfields_TreeSet_BLACK,
                                       modelfields_TreeSet_RED,
                                       modelfields_TreeSet_root,
                                       modelfields_TreeSet_size,
                                       thiz]
   and 
   equ[throw,
      null]
   and 
   modelfields_TreeSet_requires[modelfields_TreeSetEntry_blackHeight,
                               modelfields_TreeSetEntry_color,
                               modelfields_TreeSetEntry_key,
                               modelfields_TreeSetEntry_left,
                               modelfields_TreeSetEntry_parent,
                               modelfields_TreeSetEntry_right,
                               modelfields_TreeSet_BLACK,
                               modelfields_TreeSet_RED,
                               modelfields_TreeSet_modCount,
                               modelfields_TreeSet_root,
                               modelfields_TreeSet_size,
                               return,
                               thiz,
                               usedObjects,
                               value]

}

pred modelfields_TreeSetCondition2[
  thiz:univ
]{
   isEmptyOrNull[thiz]

}

pred modelfields_TreeSetCondition5[
  throw:univ
]{
   not (
     isEmptyOrNull[throw])

}

pred modelfields_TreeSetCondition8[
  var_1_p:univ
]{
   isEmptyOrNull[var_1_p]

}

pred modelfields_TreeSetCondition16[
  exit_stmt_reached:univ,
  throw:univ,
  var_2_ws_1:univ
]{
   liftExpression[var_2_ws_1]
   and 
   (
     throw=null)
   and 
   (
     exit_stmt_reached=false)

}

pred modelfields_TreeSetCondition7[
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  modelfields_TreeSet_root:univ->univ,
  thiz:univ
]{
   not (
     lt[fun_set_size[fun_reach[thiz.modelfields_TreeSet_root,modelfields_TreeSetEntry,modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right]],
       0]
   )

}

pred modelfields_TreeSetCondition6[
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  modelfields_TreeSet_root:univ->univ,
  thiz:univ
]{
   lt[fun_set_size[fun_reach[thiz.modelfields_TreeSet_root,modelfields_TreeSetEntry,modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right]],
     0]

}

pred modelfields_TreeSetCondition10[
  t_1:univ
]{
   t_1=true

}

pred modelfields_TreeSet_requires[
  modelfields_TreeSetEntry_blackHeight:univ->univ,
  modelfields_TreeSetEntry_color:univ->univ,
  modelfields_TreeSetEntry_key:univ->univ,
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_parent:univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  modelfields_TreeSet_BLACK:univ->univ,
  modelfields_TreeSet_RED:univ->univ,
  modelfields_TreeSet_modCount:univ->univ,
  modelfields_TreeSet_root:univ->univ,
  modelfields_TreeSet_size:univ->univ,
  return:univ,
  thiz:univ,
  usedObjects:univ,
  value:univ
]{
   neq[thiz.modelfields_TreeSet_root,
      null]
   and 
   (
     usedObjects=fun_weak_reach[none+thiz+return+value,java_lang_Object,(none)->(none)+modelfields_TreeSet_root+modelfields_TreeSet_size+modelfields_TreeSet_modCount+modelfields_TreeSet_RED+modelfields_TreeSet_BLACK+modelfields_TreeSetEntry_key+modelfields_TreeSetEntry_parent+modelfields_TreeSetEntry_color+modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right+modelfields_TreeSetEntry_blackHeight])

}

pred modelfields_TreeSetCondition12[
  t_2:univ
]{
   t_2=true

}

pred modelfields_TreeSetCondition11[
  t_1:univ
]{
   not (
     t_1=true)

}

pred modelfields_TreeSet_object_invariant[
  modelfields_TreeSetEntry_color:univ->univ,
  modelfields_TreeSetEntry_key:univ->univ,
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_parent:univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  modelfields_TreeSet_BLACK:univ->univ,
  modelfields_TreeSet_RED:univ->univ,
  modelfields_TreeSet_root:univ->univ,
  modelfields_TreeSet_size:univ->univ,
  thiz:univ
]{
   equ[thiz.modelfields_TreeSet_size,
      fun_set_size[fun_reach[thiz.modelfields_TreeSet_root,modelfields_TreeSetEntry,modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right]]]
   and 
   equ[thiz.modelfields_TreeSet_RED,
      false]
   and 
   equ[thiz.modelfields_TreeSet_BLACK,
      true]
   and 
   equ[(thiz.modelfields_TreeSet_root).modelfields_TreeSetEntry_parent,
      null]
   and 
   (
     neq[thiz.modelfields_TreeSet_root,
        null]
     implies 
             equ[(thiz.modelfields_TreeSet_root).modelfields_TreeSetEntry_color,
                thiz.modelfields_TreeSet_BLACK]
   )
   and 
   (
     all n:modelfields_TreeSetEntry+null | {
       liftExpression[fun_set_contains[fun_reach[thiz.modelfields_TreeSet_root,modelfields_TreeSetEntry,modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right],n]]
       implies 
               (
                 (
                   neq[n.modelfields_TreeSetEntry_left,
                      null]
                   implies 
                           equ[(n.modelfields_TreeSetEntry_left).modelfields_TreeSetEntry_parent,
                              n]
                 )
                 and 
                 (
                   neq[n.modelfields_TreeSetEntry_right,
                      null]
                   implies 
                           equ[(n.modelfields_TreeSetEntry_right).modelfields_TreeSetEntry_parent,
                              n]
                 )
                 and 
                 (
                   neq[n.modelfields_TreeSetEntry_parent,
                      null]
                   implies 
                           (
                             equ[(n.modelfields_TreeSetEntry_parent).modelfields_TreeSetEntry_left,
                                n]
                             or 
                             equ[(n.modelfields_TreeSetEntry_parent).modelfields_TreeSetEntry_right,
                                n]
                           )
                 )
                 and 
                 equ[fun_set_contains[fun_reach[n.modelfields_TreeSetEntry_parent,modelfields_TreeSetEntry,modelfields_TreeSetEntry_parent],n],
                    false]
                 and 
                 (
                   all x:modelfields_TreeSetEntry+null | {
                     liftExpression[fun_set_contains[fun_reach[n.modelfields_TreeSetEntry_left,modelfields_TreeSetEntry,modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right],x]]
                     implies 
                             gt[n.modelfields_TreeSetEntry_key,
                               x.modelfields_TreeSetEntry_key]
                   
                   }
                 )
                 and 
                 (
                   all x:modelfields_TreeSetEntry+null | {
                     liftExpression[fun_set_contains[fun_reach[n.modelfields_TreeSetEntry_right,modelfields_TreeSetEntry,modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right],x]]
                     implies 
                             gt[x.modelfields_TreeSetEntry_key,
                               n.modelfields_TreeSetEntry_key]
                   
                   }
                 )
                 and 
                 (
                   (
                     equ[n.modelfields_TreeSetEntry_color,
                        thiz.modelfields_TreeSet_RED]
                     and 
                     neq[n.modelfields_TreeSetEntry_parent,
                        null]
                   )
                   implies 
                           equ[(n.modelfields_TreeSetEntry_parent).modelfields_TreeSetEntry_color,
                              thiz.modelfields_TreeSet_BLACK]
                 )
               )
     
     }
   )

}

pred modelfields_TreeSetCondition13[
  t_2:univ
]{
   not (
     t_2=true)

}

pred modelfields_TreeSetCondition1[
  exit_stmt_reached:univ,
  throw:univ
]{
   not (
     (
       throw=null)
     and 
     (
       exit_stmt_reached=false)
   )

}

pred modelfields_TreeSetCondition0[
  exit_stmt_reached:univ,
  throw:univ
]{
   (
     throw=null)
   and 
   (
     exit_stmt_reached=false)

}

pred modelfields_TreeSetCondition9[
  var_1_p:univ
]{
   not (
     isEmptyOrNull[var_1_p])

}

pred modelfields_TreeSetCondition4[
  throw:univ
]{
   isEmptyOrNull[throw]

}

pred postcondition_modelfields_TreeSet_contains_0[
  modelfields_TreeSetEntry_color:univ->univ,
  modelfields_TreeSetEntry_color':univ->univ,
  modelfields_TreeSetEntry_key:univ->univ,
  modelfields_TreeSetEntry_key':univ->univ,
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_left':univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  modelfields_TreeSetEntry_right':univ->univ,
  modelfields_TreeSet_root':univ->univ,
  return':univ,
  thiz':univ,
  throw':univ,
  value':univ
]{
   modelfields_TreeSet_ensures[modelfields_TreeSetEntry_color,
                              modelfields_TreeSetEntry_color',
                              modelfields_TreeSetEntry_key,
                              modelfields_TreeSetEntry_key',
                              modelfields_TreeSetEntry_left,
                              modelfields_TreeSetEntry_left',
                              modelfields_TreeSetEntry_right,
                              modelfields_TreeSetEntry_right',
                              modelfields_TreeSet_root',
                              return',
                              thiz',
                              throw',
                              value']
   and 
   (
     not (
       throw'=AssertionFailureLit)
   )

}

pred modelfields_TreeSet_ensures[
  modelfields_TreeSetEntry_color:univ->univ,
  modelfields_TreeSetEntry_color':univ->univ,
  modelfields_TreeSetEntry_key:univ->univ,
  modelfields_TreeSetEntry_key':univ->univ,
  modelfields_TreeSetEntry_left:univ->univ,
  modelfields_TreeSetEntry_left':univ->univ,
  modelfields_TreeSetEntry_right:univ->univ,
  modelfields_TreeSetEntry_right':univ->univ,
  modelfields_TreeSet_root':univ->univ,
  return':univ,
  thiz':univ,
  throw':univ,
  value':univ
]{
   (
     instanceOf[throw',
               java_lang_Exception]
     implies 
             liftExpression[false]
   )
   and 
   (
     (
       throw'=null)
     implies 
             (
               all e:modelfields_TreeSetEntry+null | {
                 liftExpression[fun_set_contains[fun_reach[thiz'.modelfields_TreeSet_root',modelfields_TreeSetEntry,modelfields_TreeSetEntry_left'+modelfields_TreeSetEntry_right'],e]]
                 implies 
                         (
                           equ[e.modelfields_TreeSetEntry_left',
                              e.modelfields_TreeSetEntry_left]
                           and 
                           equ[e.modelfields_TreeSetEntry_right',
                              e.modelfields_TreeSetEntry_right]
                           and 
                           equ[e.modelfields_TreeSetEntry_color',
                              e.modelfields_TreeSetEntry_color]
                           and 
                           equ[e.modelfields_TreeSetEntry_key',
                              e.modelfields_TreeSetEntry_key]
                         )
               
               }
             )
   )
   and 
   (
     (
       throw'=null)
     implies 
             (
               (
                 equ[return',
                    true]
                 implies 
                         (
                           some e:modelfields_TreeSetEntry+null | {
                             liftExpression[fun_set_contains[fun_reach[thiz'.modelfields_TreeSet_root',modelfields_TreeSetEntry,modelfields_TreeSetEntry_left'+modelfields_TreeSetEntry_right'],e]]
                             and 
                             equ[e.modelfields_TreeSetEntry_key',
                                value']
                           
                           }
                         )
               )
               and 
               (
                 (
                   some e:modelfields_TreeSetEntry+null | {
                     liftExpression[fun_set_contains[fun_reach[thiz'.modelfields_TreeSet_root',modelfields_TreeSetEntry,modelfields_TreeSetEntry_left'+modelfields_TreeSetEntry_right'],e]]
                     and 
                     equ[e.modelfields_TreeSetEntry_key',
                        value']
                   
                   }
                 )
                 implies 
                         equ[return',
                            true]
               )
             )
   )

}

program modelfields_TreeSet_contains_0[
  thiz:modelfields_TreeSet,
  throw:java_lang_Throwable+null,
  return:boolean,
  value:Int,
  modelfields_TreeSet_root:(modelfields_TreeSet)->one(modelfields_TreeSetEntry+null),
  modelfields_TreeSet_size:(modelfields_TreeSet)->one(Int),
  modelfields_TreeSet_modCount:(modelfields_TreeSet)->one(Int),
  modelfields_TreeSet_BLACK:(modelfields_TreeSet)->one(boolean),
  modelfields_TreeSetEntry_color:(modelfields_TreeSetEntry)->one(boolean),
  modelfields_TreeSetEntry_right:(modelfields_TreeSetEntry)->one(modelfields_TreeSetEntry+null),
  modelfields_TreeSetEntry_parent:(modelfields_TreeSetEntry)->one(modelfields_TreeSetEntry+null),
  modelfields_TreeSetEntry_key:(modelfields_TreeSetEntry)->one(Int),
  modelfields_TreeSetEntry_left:(modelfields_TreeSetEntry)->one(modelfields_TreeSetEntry+null),
  modelfields_TreeSet_RED:(modelfields_TreeSet)->one(boolean),
  modelfields_TreeSetEntry_blackHeight:(modelfields_TreeSetEntry)->one(Int),
  usedObjects:set (java_lang_Object)
] var [
  t_2:boolean,
  param_value_0:Int,
  exit_stmt_reached:boolean,
  t_1:boolean,
  variant_0:Int,
  var_2_ws_1:boolean,
  var_1_p:modelfields_TreeSetEntry+null
]{
   skip;
   throw:=null;
   skip;
   exit_stmt_reached:=false;
   skip;
   if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
      param_value_0:=value
   
   } else {
      skip
   
   }
   ;
   skip;
   if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
      if modelfields_TreeSetCondition2[thiz]  {
         throw:=java_lang_NullPointerExceptionLit
      
      } else {
         var_1_p:=thiz.modelfields_TreeSet_root
      
      }
   
   } else {
      skip
   
   }
   ;
   skip;
   if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
      var_2_ws_1:=(neq[var_1_p,null]=>(true)else(false))
   
   } else {
      skip
   
   }
   ;
   while modelfields_TreeSetCondition16[exit_stmt_reached,throw,var_2_ws_1]do {
      skip;
      if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
         if modelfields_TreeSetCondition2[thiz]  {
            throw:=java_lang_NullPointerExceptionLit
         
         } else {
            variant_0:=fun_set_size[fun_reach[thiz.modelfields_TreeSet_root,modelfields_TreeSetEntry,modelfields_TreeSetEntry_left+modelfields_TreeSetEntry_right]]
         
         }
      
      } else {
         skip
      
      }
      ;
      if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
         if modelfields_TreeSetCondition2[thiz]  {
            throw:=java_lang_NullPointerExceptionLit
         
         } else {
            if modelfields_TreeSetCondition6[modelfields_TreeSetEntry_left,modelfields_TreeSetEntry_right,modelfields_TreeSet_root,thiz]  {
               getUnusedObject[throw,usedObjects];
               assume instanceOf[throw,java_lang_Object];
               if modelfields_TreeSetCondition4[throw]  {
                  throw:=java_lang_NullPointerExceptionLit
               
               } else {
                  call java_lang_Throwable_Constructor_0[throw,throw,modelfields_TreeSet_root,modelfields_TreeSet_size,modelfields_TreeSet_modCount,modelfields_TreeSet_BLACK,modelfields_TreeSetEntry_color,modelfields_TreeSetEntry_right,modelfields_TreeSetEntry_parent,modelfields_TreeSetEntry_key,modelfields_TreeSetEntry_left,modelfields_TreeSet_RED,modelfields_TreeSetEntry_blackHeight,usedObjects]
               
               }
            
            } else {
               skip
            
            }
         
         }
      
      } else {
         skip
      
      }
      ;
      skip;
      if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
         t_2:=(equ[value,var_1_p.modelfields_TreeSetEntry_key]=>(true)else(false))
      
      } else {
         skip
      
      }
      ;
      if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
         if modelfields_TreeSetCondition12[t_2]  {
            if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
               return:=true;
               exit_stmt_reached:=true
            
            } else {
               skip
            
            }
         
         } else {
            skip;
            if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
               t_1:=(lt[value,var_1_p.modelfields_TreeSetEntry_key]=>(true)else(false))
            
            } else {
               skip
            
            }
            ;
            if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
               if modelfields_TreeSetCondition10[t_1]  {
                  if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
                     if modelfields_TreeSetCondition8[var_1_p]  {
                        throw:=java_lang_NullPointerExceptionLit
                     
                     } else {
                        var_1_p:=var_1_p.modelfields_TreeSetEntry_left
                     
                     }
                  
                  } else {
                     skip
                  
                  }
               
               } else {
                  if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
                     if modelfields_TreeSetCondition8[var_1_p]  {
                        throw:=java_lang_NullPointerExceptionLit
                     
                     } else {
                        var_1_p:=var_1_p.modelfields_TreeSetEntry_right
                     
                     }
                  
                  } else {
                     skip
                  
                  }
               
               }
            
            } else {
               skip
            
            }
         
         }
      
      } else {
         skip
      
      }
      ;
      if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
         var_2_ws_1:=(neq[var_1_p,null]=>(true)else(false))
      
      } else {
         skip
      
      }
      ;
      if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
         if modelfields_TreeSetCondition2[thiz]  {
            throw:=java_lang_NullPointerExceptionLit
         
         } else {
            if modelfields_TreeSetCondition14[modelfields_TreeSetEntry_left,modelfields_TreeSetEntry_right,modelfields_TreeSet_root,thiz,variant_0]  {
               getUnusedObject[throw,usedObjects];
               assume instanceOf[throw,java_lang_Object];
               if modelfields_TreeSetCondition4[throw]  {
                  throw:=java_lang_NullPointerExceptionLit
               
               } else {
                  call java_lang_Throwable_Constructor_0[throw,throw,modelfields_TreeSet_root,modelfields_TreeSet_size,modelfields_TreeSet_modCount,modelfields_TreeSet_BLACK,modelfields_TreeSetEntry_color,modelfields_TreeSetEntry_right,modelfields_TreeSetEntry_parent,modelfields_TreeSetEntry_key,modelfields_TreeSetEntry_left,modelfields_TreeSet_RED,modelfields_TreeSetEntry_blackHeight,usedObjects]
               
               }
            
            } else {
               skip
            
            }
         
         }
      
      } else {
         skip
      
      }
   
   }
   ;
   if modelfields_TreeSetCondition0[exit_stmt_reached,throw]  {
      return:=false;
      exit_stmt_reached:=true
   
   } else {
      skip
   
   }
   ;
   skip

}

assertCorrectness check_modelfields_TreeSet_contains_0[
  exit_stmt_reached:boolean,
  modelfields_TreeSetEntry_blackHeight:(modelfields_TreeSetEntry)->one(Int),
  modelfields_TreeSetEntry_color:(modelfields_TreeSetEntry)->one(boolean),
  modelfields_TreeSetEntry_key:(modelfields_TreeSetEntry)->one(Int),
  modelfields_TreeSetEntry_left:(modelfields_TreeSetEntry)->one(modelfields_TreeSetEntry+null),
  modelfields_TreeSetEntry_parent:(modelfields_TreeSetEntry)->one(modelfields_TreeSetEntry+null),
  modelfields_TreeSetEntry_right:(modelfields_TreeSetEntry)->one(modelfields_TreeSetEntry+null),
  modelfields_TreeSet_BLACK:(modelfields_TreeSet)->one(boolean),
  modelfields_TreeSet_RED:(modelfields_TreeSet)->one(boolean),
  modelfields_TreeSet_modCount:(modelfields_TreeSet)->one(Int),
  modelfields_TreeSet_root:(modelfields_TreeSet)->one(modelfields_TreeSetEntry+null),
  modelfields_TreeSet_size:(modelfields_TreeSet)->one(Int),
  param_value_0:Int,
  return:boolean,
  t_1:boolean,
  t_2:boolean,
  thiz:modelfields_TreeSet,
  throw:java_lang_Throwable+null,
  usedObjects:set (java_lang_Object),
  value:Int,
  var_1_p:modelfields_TreeSetEntry+null,
  var_2_ws_1:boolean,
  variant_0:Int
]{
pre={
   precondition_modelfields_TreeSet_contains_0[modelfields_TreeSetEntry_blackHeight,
                                              modelfields_TreeSetEntry_color,
                                              modelfields_TreeSetEntry_key,
                                              modelfields_TreeSetEntry_left,
                                              modelfields_TreeSetEntry_parent,
                                              modelfields_TreeSetEntry_right,
                                              modelfields_TreeSet_BLACK,
                                              modelfields_TreeSet_RED,
                                              modelfields_TreeSet_modCount,
                                              modelfields_TreeSet_root,
                                              modelfields_TreeSet_size,
                                              return,
                                              thiz,
                                              throw,
                                              usedObjects,
                                              value]

}
program={
   call modelfields_TreeSet_contains_0[thiz,throw,return,value,modelfields_TreeSet_root,modelfields_TreeSet_size,modelfields_TreeSet_modCount,modelfields_TreeSet_BLACK,modelfields_TreeSetEntry_color,modelfields_TreeSetEntry_right,modelfields_TreeSetEntry_parent,modelfields_TreeSetEntry_key,modelfields_TreeSetEntry_left,modelfields_TreeSet_RED,modelfields_TreeSetEntry_blackHeight,usedObjects]

}
post={
   postcondition_modelfields_TreeSet_contains_0[modelfields_TreeSetEntry_color,
                                               modelfields_TreeSetEntry_color',
                                               modelfields_TreeSetEntry_key,
                                               modelfields_TreeSetEntry_key',
                                               modelfields_TreeSetEntry_left,
                                               modelfields_TreeSetEntry_left',
                                               modelfields_TreeSetEntry_right,
                                               modelfields_TreeSetEntry_right',
                                               modelfields_TreeSet_root',
                                               return',
                                               thiz',
                                               throw',
                                               value']

}
}

