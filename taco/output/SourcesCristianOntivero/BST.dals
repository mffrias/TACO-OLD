sig SourcesCristianOntivero_BST extends java_lang_Object {}
{}




pred SourcesCristianOntivero_BSTCondition1[
  exit_stmt_reached:univ,
  throw:univ
]{
   not (
     (
       throw=null)
     and 
     (
       exit_stmt_reached=false)
   )

}

pred SourcesCristianOntivero_BSTCondition0[
  exit_stmt_reached:univ,
  throw:univ
]{
   (
     throw=null)
   and 
   (
     exit_stmt_reached=false)

}

pred SourcesCristianOntivero_BST_object_invariant[
  SourcesCristianOntivero_BST_root:univ->univ,
  SourcesCristianOntivero_TreeNode_data:univ->univ,
  SourcesCristianOntivero_TreeNode_left:univ->univ,
  SourcesCristianOntivero_TreeNode_right:univ->univ,
  thiz:univ
]{
   (
     all n:SourcesCristianOntivero_TreeNode+null | {
       equ[fun_set_contains[fun_reach[thiz.SourcesCristianOntivero_BST_root,SourcesCristianOntivero_TreeNode,SourcesCristianOntivero_TreeNode_left+SourcesCristianOntivero_TreeNode_right],n],
          true]
       implies 
               (
                 (
                   all m:SourcesCristianOntivero_TreeNode+null | {
                     equ[fun_set_contains[fun_reach[n.SourcesCristianOntivero_TreeNode_left,SourcesCristianOntivero_TreeNode,SourcesCristianOntivero_TreeNode_left+SourcesCristianOntivero_TreeNode_right],m],
                        true]
                     implies 
                             pred_java_primitive_integer_value_lte[m.SourcesCristianOntivero_TreeNode_data,
                                                                  n.SourcesCristianOntivero_TreeNode_data]
                   
                   }
                 )
                 and 
                 (
                   all m:SourcesCristianOntivero_TreeNode+null | {
                     equ[fun_set_contains[fun_reach[n.SourcesCristianOntivero_TreeNode_right,SourcesCristianOntivero_TreeNode,SourcesCristianOntivero_TreeNode_left+SourcesCristianOntivero_TreeNode_right],m],
                        true]
                     implies 
                             pred_java_primitive_integer_value_gt[m.SourcesCristianOntivero_TreeNode_data,
                                                                 n.SourcesCristianOntivero_TreeNode_data]
                   
                   }
                 )
               )
     
     }
   )
   and 
   (
     all n:SourcesCristianOntivero_TreeNode+null | {
       equ[fun_set_contains[fun_reach[thiz.SourcesCristianOntivero_BST_root,SourcesCristianOntivero_TreeNode,SourcesCristianOntivero_TreeNode_left+SourcesCristianOntivero_TreeNode_right],n],
          true]
       implies 
               (
                 equ[fun_set_contains[fun_reach[n.SourcesCristianOntivero_TreeNode_right,SourcesCristianOntivero_TreeNode,SourcesCristianOntivero_TreeNode_right+SourcesCristianOntivero_TreeNode_left],n],
                    false]
                 and 
                 equ[fun_set_contains[fun_reach[n.SourcesCristianOntivero_TreeNode_left,SourcesCristianOntivero_TreeNode,SourcesCristianOntivero_TreeNode_left+SourcesCristianOntivero_TreeNode_right],n],
                    false]
               )
     
     }
   )

}

pred precondition_SourcesCristianOntivero_BST_insert_0[
  SourcesCristianOntivero_BST_root:univ->univ,
  SourcesCristianOntivero_TreeNode_data:univ->univ,
  SourcesCristianOntivero_TreeNode_left:univ->univ,
  SourcesCristianOntivero_TreeNode_right:univ->univ,
  throw:univ
]{
   (
     all objx:SourcesCristianOntivero_BST | {
       SourcesCristianOntivero_BST_object_invariant[SourcesCristianOntivero_BST_root,
                                                   SourcesCristianOntivero_TreeNode_data,
                                                   SourcesCristianOntivero_TreeNode_left,
                                                   SourcesCristianOntivero_TreeNode_right,
                                                   objx]
     
     }
   )
   and 
   equ[throw,
      null]
   and 
   SourcesCristianOntivero_BST_requires[]

}

pred SourcesCristianOntivero_BSTCondition5[
  do_body_rename_t_2:univ
]{
   not (
     do_body_rename_t_2=true)

}

pred SourcesCristianOntivero_BSTCondition4[
  do_body_rename_t_2:univ
]{
   do_body_rename_t_2=true

}

pred SourcesCristianOntivero_BSTCondition6[
  exit_stmt_reached:univ,
  throw:univ,
  var_2_dws_1:univ
]{
   liftExpression[var_2_dws_1]
   and 
   (
     throw=null)
   and 
   (
     exit_stmt_reached=false)

}

pred SourcesCristianOntivero_BST_ensures[
  SourcesCristianOntivero_BST_root':univ->univ,
  SourcesCristianOntivero_TreeNode_data':univ->univ,
  SourcesCristianOntivero_TreeNode_left':univ->univ,
  SourcesCristianOntivero_TreeNode_right':univ->univ,
  data':univ,
  thiz':univ,
  throw':univ
]{
   (
     throw'=null)
   implies 
           (
             some n:SourcesCristianOntivero_TreeNode+null | {
               equ[fun_set_contains[fun_reach[thiz'.SourcesCristianOntivero_BST_root',SourcesCristianOntivero_TreeNode,SourcesCristianOntivero_TreeNode_left'+SourcesCristianOntivero_TreeNode_right'],n],
                  true]
               and 
               equ[n.SourcesCristianOntivero_TreeNode_data',
                  data']
             
             }
           )

}

pred SourcesCristianOntivero_BSTCondition2[
  t_2:univ
]{
   t_2=true

}

pred SourcesCristianOntivero_BSTCondition3[
  t_2:univ
]{
   not (
     t_2=true)

}

pred SourcesCristianOntivero_BST_requires[
]{
   true=true

}

pred postcondition_SourcesCristianOntivero_BST_insert_0[
  SourcesCristianOntivero_BST_root':univ->univ,
  SourcesCristianOntivero_TreeNode_data':univ->univ,
  SourcesCristianOntivero_TreeNode_left':univ->univ,
  SourcesCristianOntivero_TreeNode_right':univ->univ,
  data':univ,
  thiz':univ,
  throw':univ
]{
   SourcesCristianOntivero_BST_ensures[SourcesCristianOntivero_BST_root',
                                      SourcesCristianOntivero_TreeNode_data',
                                      SourcesCristianOntivero_TreeNode_left',
                                      SourcesCristianOntivero_TreeNode_right',
                                      data',
                                      thiz',
                                      throw']
   and 
   (
     not (
       throw'=AssertionFailureLit)
   )

}

program SourcesCristianOntivero_BST_insert_0[
  thiz:SourcesCristianOntivero_BST,
  throw:java_lang_Throwable+null,
  return:JavaPrimitiveIntegerValue,
  data:JavaPrimitiveIntegerValue,
  SourcesCristianOntivero_TreeNode_right:(SourcesCristianOntivero_TreeNode)->one(SourcesCristianOntivero_TreeNode+null),
  SourcesCristianOntivero_BST_root:(SourcesCristianOntivero_BST)->one(SourcesCristianOntivero_TreeNode+null),
  SourcesCristianOntivero_TreeNode_data:(SourcesCristianOntivero_TreeNode)->one(JavaPrimitiveIntegerValue),
  SourcesCristianOntivero_TreeNode_left:(SourcesCristianOntivero_TreeNode)->one(SourcesCristianOntivero_TreeNode+null),
  usedObjects:set (java_lang_Object)
] var [
  do_body_rename_t_2:boolean,
  t_2:boolean,
  param_data_0:JavaPrimitiveIntegerValue,
  exit_stmt_reached:boolean,
  var_2_dws_1:boolean,
  var_1_data2:JavaPrimitiveIntegerValue,
  var_3_a:JavaPrimitiveIntegerValue,
  do_body_rename_var_3_a:JavaPrimitiveIntegerValue
]{
   skip;
   throw:=null;
   skip;
   exit_stmt_reached:=false;
   skip;
   if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
      param_data_0:=data
   
   } else {
      skip
   
   }
   ;
   skip;
   if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
      var_1_data2:=JavaPrimitiveIntegerLiteral0
   
   } else {
      skip
   
   }
   ;
   skip;
   skip;
   if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
      t_2:=(pred_java_primitive_integer_value_gt[data,JavaPrimitiveIntegerLiteral0]=>(true)else(false))
   
   } else {
      skip
   
   }
   ;
   if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
      if SourcesCristianOntivero_BSTCondition2[t_2]  {
         skip;
         if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
            var_3_a:=JavaPrimitiveIntegerLiteral7
         
         } else {
            skip
         
         }
         ;
         if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
            var_3_a:=JavaPrimitiveIntegerLiteral9
         
         } else {
            skip
         
         }
      
      } else {
         skip
      
      }
   
   } else {
      skip
   
   }
   ;
   if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
      var_2_dws_1:=(pred_java_primitive_integer_value_gt[data,JavaPrimitiveIntegerLiteral0]=>(true)else(false))
   
   } else {
      skip
   
   }
   ;
   while SourcesCristianOntivero_BSTCondition6[exit_stmt_reached,throw,var_2_dws_1]do {
      skip;
      if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
         do_body_rename_t_2:=(pred_java_primitive_integer_value_gt[data,JavaPrimitiveIntegerLiteral0]=>(true)else(false))
      
      } else {
         skip
      
      }
      ;
      if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
         if SourcesCristianOntivero_BSTCondition4[do_body_rename_t_2]  {
            skip;
            if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
               do_body_rename_var_3_a:=JavaPrimitiveIntegerLiteral7
            
            } else {
               skip
            
            }
            ;
            if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
               do_body_rename_var_3_a:=JavaPrimitiveIntegerLiteral9
            
            } else {
               skip
            
            }
         
         } else {
            skip
         
         }
      
      } else {
         skip
      
      }
      ;
      if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
         var_2_dws_1:=(pred_java_primitive_integer_value_gt[data,JavaPrimitiveIntegerLiteral0]=>(true)else(false))
      
      } else {
         skip
      
      }
   
   }
   ;
   if SourcesCristianOntivero_BSTCondition0[exit_stmt_reached,throw]  {
      return:=data;
      exit_stmt_reached:=true
   
   } else {
      skip
   
   }
   ;
   skip

}

assertCorrectness check_SourcesCristianOntivero_BST_insert_0[
  SourcesCristianOntivero_BST_root:(SourcesCristianOntivero_BST)->one(SourcesCristianOntivero_TreeNode+null),
  SourcesCristianOntivero_TreeNode_data:(SourcesCristianOntivero_TreeNode)->one(JavaPrimitiveIntegerValue),
  SourcesCristianOntivero_TreeNode_left:(SourcesCristianOntivero_TreeNode)->one(SourcesCristianOntivero_TreeNode+null),
  SourcesCristianOntivero_TreeNode_right:(SourcesCristianOntivero_TreeNode)->one(SourcesCristianOntivero_TreeNode+null),
  data:JavaPrimitiveIntegerValue,
  do_body_rename_t_2:boolean,
  do_body_rename_var_3_a:JavaPrimitiveIntegerValue,
  exit_stmt_reached:boolean,
  param_data_0:JavaPrimitiveIntegerValue,
  return:JavaPrimitiveIntegerValue,
  t_2:boolean,
  thiz:SourcesCristianOntivero_BST,
  throw:java_lang_Throwable+null,
  usedObjects:set (java_lang_Object),
  var_1_data2:JavaPrimitiveIntegerValue,
  var_2_dws_1:boolean,
  var_3_a:JavaPrimitiveIntegerValue
]{
pre={
   precondition_SourcesCristianOntivero_BST_insert_0[SourcesCristianOntivero_BST_root,
                                                    SourcesCristianOntivero_TreeNode_data,
                                                    SourcesCristianOntivero_TreeNode_left,
                                                    SourcesCristianOntivero_TreeNode_right,
                                                    throw]

}
program={
   call SourcesCristianOntivero_BST_insert_0[thiz,throw,return,data,SourcesCristianOntivero_TreeNode_right,SourcesCristianOntivero_BST_root,SourcesCristianOntivero_TreeNode_data,SourcesCristianOntivero_TreeNode_left,usedObjects]

}
post={
   postcondition_SourcesCristianOntivero_BST_insert_0[SourcesCristianOntivero_BST_root',
                                                     SourcesCristianOntivero_TreeNode_data',
                                                     SourcesCristianOntivero_TreeNode_left',
                                                     SourcesCristianOntivero_TreeNode_right',
                                                     data',
                                                     thiz',
                                                     throw']

}
}

