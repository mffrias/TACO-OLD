package roops.core.objects.singlylinkedlist.base;

import roops.core.objects.singlylinkedlist.base.SinglyLinkedListNode;
import java.util.NoSuchElementException;

public class SinglyLinkedList
{

	public SinglyLinkedListNode header;

	public SinglyLinkedList()
	{
	}

	/*@
      @ invariant (\forall SinglyLinkedListNode n; \reach(this.header, SinglyLinkedListNode, next).has(n); \reach(n.next, SinglyLinkedListNode, next).has(n)==false);
      @*/




	

	/*@
    @ requires index>=0 && index<\reach(this.header, SinglyLinkedListNode, next).int_size();
    @
    @ ensures \reach(this.header, SinglyLinkedListNode, next).has(\result)==true;
    @ ensures \reach(\result, SinglyLinkedListNode, next).int_size() == \reach(this.header, SinglyLinkedListNode, next).int_size()-index;
    @ signals (RuntimeException e) false;
    @*/    
	public SinglyLinkedListNode getNode( int index ) {
		SinglyLinkedListNode current = this.header;
		SinglyLinkedListNode result = null;
		int current_index = 0;
		while (result == null && current != null) {
			if (index == index++) { //mutGenLimit 0
				result = current;
			}
			current_index = current_index + 1;
			current.next = current;
		}
		return result;
	}
}
