sig ar_edu_taco_floatTest_FloatTest extends java_lang_Object {}
{}




pred ar_edu_taco_floatTest_FloatTestCondition0[
  t_1:univ
]{
   isEmptyOrNull[t_1]

}

pred ar_edu_taco_floatTest_FloatTestCondition1[
  t_1:univ
]{
   not (
     isEmptyOrNull[t_1])

}

pred postcondition_ar_edu_taco_floatTest_FloatTest_add_0[
  return':univ,
  throw':univ
]{
   ar_edu_taco_floatTest_FloatTest_ensures[return',
                                          throw']
   and 
   (
     not (
       throw'=AssertionFailureLit)
   )

}

pred ar_edu_taco_floatTest_FloatTestCondition5[
  var_1_i:univ
]{
   not (
     isEmptyOrNull[var_1_i])

}

pred ar_edu_taco_floatTest_FloatTestCondition3[
  exit_stmt_reached:univ,
  throw:univ
]{
   not (
     (
       throw=null)
     and 
     (
       exit_stmt_reached=false)
   )

}

pred ar_edu_taco_floatTest_FloatTestCondition2[
  exit_stmt_reached:univ,
  throw:univ
]{
   (
     throw=null)
   and 
   (
     exit_stmt_reached=false)

}

pred ar_edu_taco_floatTest_FloatTest_ensures[
  return':univ,
  throw':univ
]{
   (
     throw'=null)
   implies 
           equ[return',
              JavaPrimitiveIntegerLiteral7]

}

pred ar_edu_taco_floatTest_FloatTest_requires[
  ar_edu_taco_floatTest_FloatTest_att:univ->univ,
  integerHashCode:univ->univ,
  return:univ,
  thiz:univ,
  usedObjects:univ
]{
   (
     true=true)
   and 
   (
     usedObjects=fun_weak_reach[none+thiz+return,java_lang_Object,(none)->(none)+ar_edu_taco_floatTest_FloatTest_att+integerHashCode])

}

pred ar_edu_taco_floatTest_FloatTestCondition4[
  var_1_i:univ
]{
   isEmptyOrNull[var_1_i]

}

pred precondition_ar_edu_taco_floatTest_FloatTest_add_0[
  ar_edu_taco_floatTest_FloatTest_att:univ->univ,
  integerHashCode:univ->univ,
  return:univ,
  thiz:univ,
  throw:univ,
  usedObjects:univ
]{
   equ[throw,
      null]
   and 
   ar_edu_taco_floatTest_FloatTest_requires[ar_edu_taco_floatTest_FloatTest_att,
                                           integerHashCode,
                                           return,
                                           thiz,
                                           usedObjects]

}

program ar_edu_taco_floatTest_FloatTest_add_0[
  thiz:ar_edu_taco_floatTest_FloatTest,
  throw:java_lang_Throwable+null,
  return:JavaPrimitiveIntegerValue,
  integerHashCode:(java_lang_Integer)->one(JavaPrimitiveIntegerValue),
  ar_edu_taco_floatTest_FloatTest_att:(ar_edu_taco_floatTest_FloatTest)->one(JavaPrimitiveIntegerValue),
  usedObjects:set (java_lang_Object)
] var [
  t_2:JavaPrimitiveIntegerValue,
  t_3:JavaPrimitiveIntegerValue,
  exit_stmt_reached:boolean,
  t_1:java_lang_Integer+null,
  var_1_i:java_lang_Integer+null,
  var_2_j:JavaPrimitiveIntegerValue
]{
   skip;
   throw:=null;
   skip;
   exit_stmt_reached:=false;
   skip;
   skip;
   skip;
   if ar_edu_taco_floatTest_FloatTestCondition2[exit_stmt_reached,throw]  {
      getUnusedObject[t_1,usedObjects];
      assume instanceOf[t_1,java_lang_Integer];
      if ar_edu_taco_floatTest_FloatTestCondition0[t_1]  {
         throw:=java_lang_NullPointerExceptionLit
      
      } else {
         call java_lang_Integer_Constructor_0[t_1,throw,JavaPrimitiveIntegerLiteral7,integerHashCode,ar_edu_taco_floatTest_FloatTest_att,usedObjects]
      
      }
   
   } else {
      skip
   
   }
   ;
   skip;
   if ar_edu_taco_floatTest_FloatTestCondition2[exit_stmt_reached,throw]  {
      var_1_i:=t_1
   
   } else {
      skip
   
   }
   ;
   if ar_edu_taco_floatTest_FloatTestCondition2[exit_stmt_reached,throw]  {
      if ar_edu_taco_floatTest_FloatTestCondition4[var_1_i]  {
         throw:=java_lang_NullPointerExceptionLit
      
      } else {
         call java_lang_Integer_intValue_0[var_1_i,throw,t_2,integerHashCode,ar_edu_taco_floatTest_FloatTest_att,usedObjects]
      
      }
   
   } else {
      skip
   
   }
   ;
   if ar_edu_taco_floatTest_FloatTestCondition2[exit_stmt_reached,throw]  {
      t_3:=fun_java_primitive_integer_value_add[t_2,JavaPrimitiveIntegerLiteral1]
   
   } else {
      skip
   
   }
   ;
   skip;
   if ar_edu_taco_floatTest_FloatTestCondition2[exit_stmt_reached,throw]  {
      var_2_j:=t_3
   
   } else {
      skip
   
   }
   ;
   if ar_edu_taco_floatTest_FloatTestCondition2[exit_stmt_reached,throw]  {
      return:=var_2_j;
      exit_stmt_reached:=true
   
   } else {
      skip
   
   }
   ;
   skip

}

assertCorrectness check_ar_edu_taco_floatTest_FloatTest_add_0[
  ar_edu_taco_floatTest_FloatTest_att:(ar_edu_taco_floatTest_FloatTest)->one(JavaPrimitiveIntegerValue),
  exit_stmt_reached:boolean,
  integerHashCode:(java_lang_Integer)->one(JavaPrimitiveIntegerValue),
  return:JavaPrimitiveIntegerValue,
  t_1:java_lang_Integer+null,
  t_2:JavaPrimitiveIntegerValue,
  t_3:JavaPrimitiveIntegerValue,
  thiz:ar_edu_taco_floatTest_FloatTest,
  throw:java_lang_Throwable+null,
  usedObjects:set (java_lang_Object),
  var_1_i:java_lang_Integer+null,
  var_2_j:JavaPrimitiveIntegerValue
]{
pre={
   precondition_ar_edu_taco_floatTest_FloatTest_add_0[ar_edu_taco_floatTest_FloatTest_att,
                                                     integerHashCode,
                                                     return,
                                                     thiz,
                                                     throw,
                                                     usedObjects]

}
program={
   call ar_edu_taco_floatTest_FloatTest_add_0[thiz,throw,return,integerHashCode,ar_edu_taco_floatTest_FloatTest_att,usedObjects]

}
post={
   postcondition_ar_edu_taco_floatTest_FloatTest_add_0[return',
                                                      throw']

}
}

